<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joel in The House</title>
    <link>http://xmasuhai.xyz/</link>
    <description>Recent content on Joel in The House</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Joel Xu</copyright>
    <lastBuildDate>Fri, 07 Feb 2020 00:41:31 +0800</lastBuildDate>
    
        <atom:link href="http://xmasuhai.xyz/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://xmasuhai.xyz/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;

&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS非全解09】CSS 动画_transform全解和transition过渡</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A309css-%E5%8A%A8%E7%94%BB_transform%E5%85%A8%E8%A7%A3%E5%92%8Ctransition%E8%BF%87%E6%B8%A1/</link>
      <pubDate>Fri, 07 Feb 2020 00:41:31 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A309css-%E5%8A%A8%E7%94%BB_transform%E5%85%A8%E8%A7%A3%E5%92%8Ctransition%E8%BF%87%E6%B8%A1/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/search?q=transform+MDN&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=transform+MDN&amp;amp;aqs=chrome..69i57j0l4j69i60l3.365j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;transform MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;transform&#34;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;四个常用功能&#34;&gt;四个常用功能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;位移&lt;code&gt;translate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;缩放&lt;code&gt;scale&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;旋转&lt;code&gt;rotate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;倾斜&lt;code&gt;skew&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;transform-经验&#34;&gt;&lt;code&gt;transform&lt;/code&gt;经验&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;一般都需配合&lt;code&gt;transition&lt;/code&gt;过渡&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inline&lt;/code&gt;元素不支持&lt;code&gt;transform&lt;/code&gt;，需先变成&lt;code&gt;block&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;位移-translate&#34;&gt;位移&lt;code&gt;translate&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&#34;常用写法&#34;&gt;常用写法&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;translateX(&amp;lt;length-percentage&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;translateY(&amp;lt;length-percentage&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;translate(&amp;lt;length-percentage&amp;gt;,&amp;lt;length-percentage&amp;gt;?)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;translateZ(&amp;lt;length&amp;gt;)&lt;/code&gt;并且父容器是&lt;code&gt;perspective&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;translate3d(x,y,z)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;h4 id=&#34;translate-经验&#34;&gt;&lt;code&gt;translate&lt;/code&gt;经验&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;看懂 MDN 语法格式，自学无碍&lt;/li&gt;
&lt;li&gt;&lt;code&gt;translate(-50%,-50%)&lt;/code&gt;可做绝对定位元素的居中&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;缩放-scale&#34;&gt;缩放&lt;code&gt;scale&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&#34;常用写法-1&#34;&gt;常用写法&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scaleX(&amp;lt;number&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scaleY(&amp;lt;number&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scale(&amp;lt;number&amp;gt;,&amp;lt;number&amp;gt;?)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;h4 id=&#34;scale-经验&#34;&gt;&lt;code&gt;scale&lt;/code&gt;经验&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;不常用，易出现模糊&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;旋转-rotate&#34;&gt;旋转&lt;code&gt;rotate&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&#34;常用写法-2&#34;&gt;常用写法&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rotate([ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rotateZ([ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rotateX([ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rotateY([ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function/rotate3d&#34;&gt;&lt;code&gt;rotate3d()&lt;/code&gt;较复杂&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;h4 id=&#34;rotate-经验&#34;&gt;&lt;code&gt;rotate&lt;/code&gt;经验&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;常用于 360 旋转制作 loading&lt;/li&gt;
&lt;li&gt;用到时再搜索&lt;a href=&#34;https://www.google.com/search?q=rotate+MDN&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=rotate+MDN&amp;amp;aqs=chrome..69i57j69i60l3.130j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;&lt;code&gt;rotate MDN&lt;/code&gt;&lt;/a&gt;看文档&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;倾斜-skew&#34;&gt;倾斜&lt;code&gt;skew&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&#34;常用写法-3&#34;&gt;常用写法&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;skewX([ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skewY([ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skew([ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ],[ &amp;lt;angle&amp;gt; | &amp;lt;zero&amp;gt; ])&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;h4 id=&#34;skew-经验&#34;&gt;&lt;code&gt;skew&lt;/code&gt;经验&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用得少&lt;/li&gt;
&lt;li&gt;用到时再在搜索&lt;a href=&#34;https://www.google.com/search?q=skew+MDN&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=skew+MDN&amp;amp;aqs=chrome..69i57.96j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;&lt;code&gt;skew MDN&lt;/code&gt;&lt;/a&gt;看文档&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;transform-多重效果&#34;&gt;&lt;code&gt;transform&lt;/code&gt;多重效果&lt;/h3&gt;

&lt;h4 id=&#34;组合使用&#34;&gt;组合使用&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;transform:scale(0.5) translate(-100%,-100%);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transform:none;&lt;/code&gt;取消所有&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://note.youdao.com/&#34;&gt;CSS 动画实现：跳动的心&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CSS 需要想象力，而不是逻辑&lt;/p&gt;

&lt;p&gt;CSS 给出的属性都很简单，但组合得很复杂&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/search?q=transition+MDN&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=transition+MDN&amp;amp;aqs=chrome..69i57j69i60.157j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;transition MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;transition-过渡&#34;&gt;&lt;code&gt;transition&lt;/code&gt;过渡&lt;/h2&gt;

&lt;h3 id=&#34;作用&#34;&gt;作用&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;补充中间帧&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;语法&#34;&gt;语法&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;transition: 属性名 时长 过渡方式 延迟&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;eg. &lt;code&gt;transition: left 200ms linear&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;可以用逗号分隔两个不同属性&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;eg. &lt;code&gt;transition: left 200ms linear, top 400ms&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;可以用&lt;code&gt;all&lt;/code&gt;代表所有属性&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;eg. &lt;code&gt;transition: all 200ms&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;过渡方式有&lt;code&gt;linear | ease | ease-in | ease-out | ease-in-out | cubic-bezier | step-start | step-end | steps&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/timing-function&#34;&gt;具体含义靠数学知识&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;注意&#34;&gt;注意&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;并不是所有属性都能加上「过渡」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display:none=&amp;gt;block&lt;/code&gt;没法加过渡&lt;/li&gt;
&lt;li&gt;一般改成&lt;code&gt;visibility:hidden=&amp;gt;visible&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display&lt;/code&gt;和&lt;code&gt;visibility&lt;/code&gt; 的区别&lt;/li&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;和&lt;code&gt;opacity&lt;/code&gt;可以加过渡&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;过渡必须要有起始&#34;&gt;过渡必须要有起始&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;一般只有一次动画，或者两次&lt;/p&gt;

&lt;p&gt;比如 &lt;code&gt;hover&lt;/code&gt;和非&lt;code&gt;hover&lt;/code&gt;状态的过渡&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;除了起始-还存在中间点-的情况处理方法&#34;&gt;「除了起始，还存在中间点」的情况处理方法&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;两种办法&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;使用两次-transform&#34;&gt;使用两次&lt;code&gt;transform&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.a&lt;/code&gt;====&amp;gt;&lt;code&gt;transform&lt;/code&gt;====&amp;gt;&lt;code&gt;b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.b&lt;/code&gt;====&amp;gt;&lt;code&gt;transform&lt;/code&gt;====&amp;gt;&lt;code&gt;c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;如何知道有中间点？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;用&lt;code&gt;setTimeout&lt;/code&gt;或者监听&lt;code&gt;transitionend&lt;/code&gt;事件（JS）&lt;/p&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;h4 id=&#34;使用-animation&#34;&gt;使用&lt;code&gt;animation&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;声明关键帧&lt;/li&gt;
&lt;li&gt;添加动画&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;如何让动画停在最后一帧？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;搜索&lt;code&gt;css animation stop at end&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;加个&lt;code&gt;forward&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-9-6-14-27-31.pdf&#34;&gt;CSS 动画.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html&#34;&gt;CSS 动画简介&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【CSS非全解08】CSS 动画_动画及浏览器渲染原理</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A308css-%E5%8A%A8%E7%94%BB_%E5%8A%A8%E7%94%BB%E5%8F%8A%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</link>
      <pubDate>Fri, 07 Feb 2020 00:41:05 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A308css-%E5%8A%A8%E7%94%BB_%E5%8A%A8%E7%94%BB%E5%8F%8A%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</guid>
      
        <description>

&lt;h2 id=&#34;一个最简单的例子&#34;&gt;一个最简单的例子&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;将&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;从左往右移动：
&lt;a href=&#34;http://xmasuhai.xyz/demo-test/css-demo-5/css-demo_rendering.html&#34;&gt;用 JS 实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;原理&#34;&gt;原理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;每过一段时间，将 div 移动一小段距离&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;setInterval&lt;/code&gt;实现&lt;/li&gt;
&lt;li&gt;直到移动到目标处&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;注意性能&#34;&gt;注意性能&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Chrome 开发者工具，点任何一个 Tab，按 Esc，按竖排省略号按钮，选&lt;code&gt;Rendering&lt;/code&gt;，勾选&lt;code&gt;Paint flashing&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;绿色闪烁表示：重新绘制（repaint）&lt;/li&gt;
&lt;li&gt;每次闪烁，都消耗性能&lt;/li&gt;
&lt;li&gt;CSS 渲染过程依次包含：布局、绘制、合成&lt;/li&gt;
&lt;li&gt;其中布局和绘制有可能会被省略&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;不用-position-和-left-做动画&#34;&gt;不用&lt;code&gt;position&lt;/code&gt;和&lt;code&gt;left&lt;/code&gt;做动画&lt;/h2&gt;

&lt;h3 id=&#34;用-transform&#34;&gt;用&lt;code&gt;transform&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;demo&lt;/p&gt;

&lt;h3 id=&#34;transform-原理&#34;&gt;&lt;code&gt;transform&lt;/code&gt;原理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;transform:translateX(0=&amp;gt;300px);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;直接修改会被合成，需要等一会修改&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;过渡属性可以自动脑补中间帧&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;注意-transform-性能&#34;&gt;注意&lt;code&gt;transform&lt;/code&gt;性能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;并没有&lt;code&gt;repaint&lt;/code&gt;（重新绘制）&lt;/li&gt;
&lt;li&gt;比更改&lt;code&gt;left&lt;/code&gt;性能好&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;浏览器渲染原理&#34;&gt;浏览器渲染原理&lt;/h2&gt;

&lt;h3 id=&#34;参考文章&#34;&gt;参考文章&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&#34;&gt;渲染树构建、布局及绘制&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering&#34;&gt;渲染性能 by goole team&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count&#34;&gt;使用 transform 和 opacity 属性更改来实现动画&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;查看-css-各属性会出发什么&#34;&gt;查看 CSS 各属性会出发什么？&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;（Layout Paint Composite）（布局 绘制 合成）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://csstriggers.com/&#34;&gt;CSSTriggers.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;浏览器渲染过程&#34;&gt;浏览器渲染过程&lt;/h3&gt;

&lt;p&gt;步骤：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;根据 HTML 树构建 HTML 树（DOM）&lt;/li&gt;
&lt;li&gt;根据 CSS 构建 CSS 树（CSSDOM）&lt;/li&gt;
&lt;li&gt;将两棵树合并成一棵：渲染树（render tree）&lt;/li&gt;
&lt;li&gt;即&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/constructing-the-object-model&#34;&gt;构建对象模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;由渲染树（render tree）可进行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Layout&lt;/code&gt;布局（文档流和定位、盒模型、计算元素的大小和位置）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Paint&lt;/code&gt;绘制（把边框颜色、文字颜色、阴影等画出来）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;合成（根据层叠关系展示画面）&lt;/li&gt;
&lt;li&gt;即&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&#34;&gt;渲染树构建、布局及绘制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;三棵树-dom-cssdom-render&#34;&gt;三棵树（DOM CSSDOM render）&lt;/h3&gt;

&lt;h3 id=&#34;如何更新样式&#34;&gt;如何更新样式&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;一般用 JS 来更新样式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;比如&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;div.style.background=&#39;red&#39;
div.style.display=&#39;none&#39;
/* 加样式不如加类，类里可包含许多类 */
div.classList.add(&#39;red&#39;)
div.remove(); /* 直接删掉节点 */
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;三种不同的渲染方式&#34;&gt;三种不同的渲染方式&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;JS/CSS&amp;gt;样式&amp;gt;布局&amp;gt;合成&lt;/li&gt;
&lt;li&gt;JS/CSS&amp;gt;样式&amp;gt;无布局&amp;gt;绘制&amp;gt;合成&lt;/li&gt;
&lt;li&gt;JS/CSS&amp;gt;样式&amp;gt;无布局&amp;gt;无绘制&amp;gt;合成&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;JS 和 Style 样式计算必不可少&lt;/p&gt;

&lt;p&gt;最后都要&lt;code&gt;composite&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;不同方法间的区别-以下链接-demo&#34;&gt;不同方法间的区别（以下链接 demo）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;第一种：全走&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://xmasuhai.xyz/demo-test/css-demo-5/css-demo_rendering.html&#34;&gt;&lt;code&gt;div.remove()&lt;/code&gt;&lt;/a&gt;：会触发当前消失，其他元素重布局&lt;code&gt;relayout&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;第二种：跳过&lt;code&gt;layout&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;未改变元素的位置和大小&lt;/p&gt;

&lt;p&gt;比如&lt;a href=&#34;http://xmasuhai.xyz/demo-test/css-demo-5/css-demo_rendering.html&#34;&gt;只改变背景颜色&lt;/a&gt;：直接&lt;code&gt;repaint&lt;/code&gt;+&lt;code&gt;composite&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;第三种：跳过&lt;code&gt;layout&lt;/code&gt;和&lt;code&gt;paint&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://xmasuhai.xyz/demo-test/css-demo-5/css-demo_rendering.html&#34;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;：只需&lt;code&gt;composite&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;注意：必须全屏查看效果，在&lt;code&gt;iframe&lt;/code&gt;里看有问题&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;不同属性触发的流程也各不相同，可查：&lt;a href=&#34;https://csstriggers.com/&#34;&gt;CSSTriggers&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;css-动画优化-面试-5&#34;&gt;CSS 动画优化（面试 5%）&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering#%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E4%BC%98%E5%8C%96&#34;&gt;浏览器渲染优化&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count#%E4%BD%BF%E7%94%A8_transform_%E5%92%8C_opacity_%E5%B1%9E%E6%80%A7%E6%9B%B4%E6%94%B9%E6%9D%A5%E5%AE%9E%E7%8E%B0%E5%8A%A8%E7%94%BB&#34;&gt;使用 transform 和 opacity 属性更改来实现动画&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;js-优化&#34;&gt;JS 优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/optimize-javascript-execution&#34;&gt;优化 JavaScript 执行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用&lt;code&gt;requestAnimationFrame&lt;/code&gt;代替&lt;code&gt;setTimeout&lt;/code&gt;或&lt;code&gt;setInterval&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;css-优化&#34;&gt;CSS 优化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations&#34;&gt;缩小样式计算的范围并降低其复杂性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing&#34;&gt;避免大型、复杂的布局和布局抖动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/simplify-paint-complexity-and-reduce-paint-areas&#34;&gt;简化绘制的复杂度、减小绘制区域&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count&#34;&gt;坚持仅合成器的属性和管理层计数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/debounce-your-input-handlers&#34;&gt;使输入处理程序去除抖动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用&lt;code&gt;will-change&lt;/code&gt;或&lt;code&gt;translate&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;死记硬背&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章-1&#34;&gt;参考文章&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-9-6-14-27-31.pdf&#34;&gt;CSS 动画.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2015/09/web-page-performance-in-depth.html&#34;&gt;网页性能管理详解&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【CSS非全解11】CSS 知识总结与扩展</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A311css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8E%E6%89%A9%E5%B1%95/</link>
      <pubDate>Fri, 07 Feb 2020 00:39:55 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A311css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8E%E6%89%A9%E5%B1%95/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;CSS都学了些什么？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;基础技术&#34;&gt;基础技术&lt;/h2&gt;

&lt;h3 id=&#34;非体系化学css&#34;&gt;非体系化学CSS&lt;/h3&gt;

&lt;p&gt;reset.css&lt;/p&gt;

&lt;h3 id=&#34;文档流&#34;&gt;文档流&lt;/h3&gt;

&lt;h3 id=&#34;盒模型&#34;&gt;盒模型&lt;/h3&gt;

&lt;h3 id=&#34;布局&#34;&gt;布局&lt;/h3&gt;

&lt;h3 id=&#34;定位&#34;&gt;定位&lt;/h3&gt;

&lt;h3 id=&#34;前端的底线和常用草图软件&#34;&gt;前端的底线和常用草图软件&lt;/h3&gt;

&lt;h3 id=&#34;css-动画的两种做法-transition-和-animation&#34;&gt;&lt;strong&gt;CSS 动画的两种做法（transition 和 animation）&lt;/strong&gt;&lt;/h3&gt;

&lt;h2 id=&#34;面试技术&#34;&gt;面试技术&lt;/h2&gt;

&lt;h3 id=&#34;visibility-和-display-的区别&#34;&gt;&lt;code&gt;visibility&lt;/code&gt;和&lt;code&gt;display&lt;/code&gt;的区别&lt;/h3&gt;

&lt;h3 id=&#34;多种居中方式&#34;&gt;多种居中方式&lt;/h3&gt;

&lt;h3 id=&#34;处理-text-overflow&#34;&gt;处理&lt;code&gt;text-overflow&lt;/code&gt;&lt;/h3&gt;

&lt;h3 id=&#34;样式继承-选择器权重&#34;&gt;样式继承、选择器权重&lt;/h3&gt;

&lt;h3 id=&#34;层叠上下文&#34;&gt;层叠上下文&lt;/h3&gt;

&lt;h3 id=&#34;为什么这么多人讲不清楚bfc-以及xxxfc&#34;&gt;为什么这么多人讲不清楚BFC？以及XxxFC&lt;/h3&gt;

&lt;h3 id=&#34;浏览器渲染机制&#34;&gt;&lt;strong&gt;浏览器渲染机制&lt;/strong&gt;&lt;/h3&gt;

&lt;h3 id=&#34;重绘与回流&#34;&gt;重绘与回流&lt;/h3&gt;

&lt;h3 id=&#34;vw与移动端适配-媒体查询&#34;&gt;vw与移动端适配 媒体查询&lt;/h3&gt;

&lt;h3 id=&#34;设备像素-设备独立像素-css像素-ppi-devicepixelratio&#34;&gt;设备像素、设备独立像素、CSS像素、PPI、devicePixelRatio&lt;/h3&gt;

&lt;h2 id=&#34;拓展技术&#34;&gt;拓展技术&lt;/h2&gt;

&lt;h3 id=&#34;bootstrap-的使用方法就是复制粘贴&#34;&gt;Bootstrap 的使用方法就是复制粘贴&lt;/h3&gt;

&lt;h3 id=&#34;scss&#34;&gt;SCSS&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;SASS LESS postCSS Stylus&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;gsap&#34;&gt;GSAP&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000005366176&#34;&gt;GSAP - 专业的Web 动画库&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.tweenmax.com.cn/&#34;&gt;TweenMax中文网（GreenSock动画平台,GSAP）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.google.com/search?q=GSAP&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=GSAP&amp;amp;aqs=chrome..69i57j0l5j69i65l2.3746j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;GSAP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://greensock.com/gsap/&#34;&gt;GSAP官网&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.tweenmax.com.cn&#34;&gt;GSAP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000005366176&#34;&gt;GSAP - 专业的 Web 动画库&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://svgtrick.com/book/greensock/GreenSockBasic/animate.html&#34;&gt;整个了greensock动画开发的简明教程&lt;/a&gt;&lt;/p&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;

&lt;li&gt;&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;无&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【HTTP非全解】请求和响应 &amp; Node.Js Server</title>
      <link>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94-node.js-server/</link>
      <pubDate>Sat, 25 Jan 2020 00:52:10 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94-node.js-server/</guid>
      
        <description>

&lt;h1 id=&#34;记得用完服务器机器要关机-并选择停止计费&#34;&gt;&lt;strong&gt;记得用完服务器机器要关机（并选择停止计费）&lt;/strong&gt;&lt;/h1&gt;

&lt;h2 id=&#34;记得用完服务器机器要关机-并选择停止计费-1&#34;&gt;&lt;strong&gt;记得用完服务器机器要关机（并选择停止计费）&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&#34;记得用完服务器机器要关机-并选择停止计费-2&#34;&gt;&lt;strong&gt;记得用完服务器机器要关机（并选择停止计费）&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&#34;记得用完服务器机器要关机-并选择停止计费-3&#34;&gt;&lt;strong&gt;记得用完服务器机器要关机（并选择停止计费）&lt;/strong&gt;&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;前置条件&#34;&gt;前置条件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;安装Node.js 8+&lt;/li&gt;
&lt;li&gt;理解IP和端口&lt;/li&gt;
&lt;li&gt;理解URL路径和查询参数&lt;/li&gt;
&lt;li&gt;不需要会JavaScript&lt;/li&gt;
&lt;li&gt;本节所有代码建议复制使用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;演示-node-js-server&#34;&gt;演示 Node.js Server&lt;/h2&gt;

&lt;h3 id=&#34;请求与响应模型&#34;&gt;请求与响应模型&lt;/h3&gt;

&lt;p&gt;前端的代码在客户端Client（浏览器、APP）&lt;/p&gt;

&lt;p&gt;IP 124.124.233.233:80&lt;/p&gt;

&lt;p&gt;请求-&amp;gt;服务器（Sever）&lt;/p&gt;

&lt;p&gt;服务器（Sever）&lt;/p&gt;

&lt;p&gt;IP 123.123.233.233:80&lt;/p&gt;

&lt;p&gt;响应-&amp;gt;客户端&lt;/p&gt;

&lt;h3 id=&#34;如何发请求&#34;&gt;如何发请求&lt;/h3&gt;

&lt;h4 id=&#34;方法&#34;&gt;方法&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用Chrome（地址栏输入URL）&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;curl&lt;/code&gt;命令&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;开发者工具Network面板，刷新页面&lt;/p&gt;

&lt;p&gt;响应看&lt;code&gt;Response&lt;/code&gt;，HTML CSS JS image等&lt;/p&gt;

&lt;h4 id=&#34;概念&#34;&gt;概念&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;帮你发送请求的工具叫「用户代理」&lt;/li&gt;
&lt;li&gt;即「User Agent」&lt;/li&gt;
&lt;li&gt;用Chrome时的用户代理就是Chrome&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;curl&lt;/code&gt;时的用户代理就是curl&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;如何模拟一个响应&#34;&gt;如何模拟一个响应&lt;/h3&gt;

&lt;p&gt;用&lt;code&gt;curl&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;需用编程&#34;&gt;需用编程&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Node.js有一个http模块可以做到&lt;/li&gt;
&lt;li&gt;使用以下&lt;a href=&#34;https://github.com/FrankFang/nodejs-test/blob/master/server.js&#34;&gt;初始代码&lt;/a&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;全部测试代码&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;var http = require(&#39;http&#39;)
var fs = require(&#39;fs&#39;)
var url = require(&#39;url&#39;)
var port = process.argv[2]

if(!port){
  console.log(&#39;请指定端口号好不啦？\nnode server.js 8888 这样不会吗？&#39;)
  process.exit(1)
}

var server = http.createServer(function(request, response){
  var parsedUrl = url.parse(request.url, true)
  var pathWithQuery = request.url 
  var queryString = &#39;&#39;
  if(pathWithQuery.indexOf(&#39;?&#39;) &amp;gt;= 0){ queryString = pathWithQuery.substring(pathWithQuery.indexOf(&#39;?&#39;)) }
  var path = parsedUrl.pathname
  var query = parsedUrl.query
  var method = request.method

  /******** 从这里开始看，上面不要看 ************/

  console.log(&#39;有个傻子发请求过来啦！路径（带查询参数）为：&#39; + pathWithQuery)

  if(path === &#39;/&#39;){
    response.statusCode = 200
    response.setHeader(&#39;Content-Type&#39;, &#39;text/html;charset=utf-8&#39;)
    response.write(`二哈`)
    response.end()
  } else if(path === &#39;/x&#39;){
    response.statusCode = 200
    response.setHeader(&#39;Content-Type&#39;, &#39;text/css;charset=utf-8&#39;)
    response.write(`body{color: red;}`)
    response.end()
  } else {
    response.statusCode = 404
    response.setHeader(&#39;Content-Type&#39;, &#39;text/html;charset=utf-8&#39;)
    response.write(`你输入的路径不存在对应的内容`)
    response.end()
  }

  /******** 代码结束，下面不要看 ************/
})

server.listen(port)
console.log(&#39;监听 &#39; + port + &#39; 成功\n请用在空中转体720度然后用电饭煲打开 http://localhost:&#39; + port)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;只要请求了&lt;code&gt;8888&lt;/code&gt;端口，就会被&lt;code&gt;server.js&lt;/code&gt;监听，每一次请求，就运行一遍此代码&lt;/p&gt;

&lt;h4 id=&#34;注意事项&#34;&gt;注意事项&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;这些代码就是服务器代码，一般放在服务器上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;是不带查询参数的路径&lt;code&gt;/x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;query&lt;/code&gt;是查询参数的对象形式&lt;code&gt;{a:&#39;1&#39;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;queryString&lt;/code&gt;是查询参数的字符串形式&lt;code&gt;?a=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pathWithQuery&lt;/code&gt;是带查询参数的路径，一般不用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;request&lt;/code&gt;是请求对象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;response&lt;/code&gt;是响应对象&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;主要代码&#34;&gt;主要代码&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;/******** 从这里开始看，上面不要看 ************/
  console.log(&#39;有个傻子发请求过来啦！路径（带查询参数）为：&#39; + pathWithQuery)

  if(path === &#39;/&#39;){
    response.statusCode = 200
    response.setHeader(&#39;Content-Type&#39;, &#39;text/html;charset=utf-8&#39;)
    response.write(`二哈`)
    response.end()
  } else if(path === &#39;/x&#39;){
    response.statusCode = 200
    response.setHeader(&#39;Content-Type&#39;, &#39;text/css;charset=utf-8&#39;)
    response.write(`body{color: red;}`)
    response.end()
  } else {
    response.statusCode = 404
    response.setHeader(&#39;Content-Type&#39;, &#39;text/html;charset=utf-8&#39;)
    response.write(`你输入的路径不存在对应的内容`)
    response.end()
  }

  /******** 代码结束，下面不要看 ************/
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;代码逻辑&#34;&gt;代码逻辑&lt;/h4&gt;

&lt;h5 id=&#34;语法&#34;&gt;语法&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;注意``，和&lt;code&gt;&#39;&#39;&lt;/code&gt;是不同的符号&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;``，这种字符串里面可以回车&lt;/li&gt;
&lt;li&gt;\&amp;rsquo;\&amp;lsquo;，这种字符串要回车只能用&lt;code&gt;\n&lt;/code&gt;表示&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;逻辑&#34;&gt;逻辑&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;每次受到请求都会把中间的代码执行一遍&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;if else&lt;/code&gt;判断路径，并返回响应&lt;/li&gt;
&lt;li&gt;如果是已知路径，一律返回&lt;code&gt;200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果是位置路径，一律返回&lt;code&gt;400&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Content-Type&lt;/code&gt;标示内容的「类型/语法」&lt;/li&gt;
&lt;li&gt;&lt;code&gt;response.write()&lt;/code&gt;可以填写返回的内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;response.end()&lt;/code&gt;表示响应可以发给用户了&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;nodejs-test&#34;&gt;nodejs-test&lt;/h2&gt;

&lt;h3 id=&#34;启动应用&#34;&gt;启动应用&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;node server.js 8888&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;或者&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node server 8888&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;添加路由&#34;&gt;添加路由&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;编辑 &lt;code&gt;server.js&lt;/code&gt; 文件，添加 &lt;code&gt;if else&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重新运行 &lt;code&gt;node server.js 8888&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;后台启动应用&#34;&gt;后台启动应用&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch log
node server.js 8888 &amp;gt;log log 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;用-curl-访问-8888-或者用浏览器&#34;&gt;用&lt;code&gt;curl&lt;/code&gt;访问&lt;code&gt;8888&lt;/code&gt;，或者用浏览器&lt;/h3&gt;

&lt;p&gt;用&lt;code&gt;curl&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node server.js 8888/x
curl http://127.0.0.1:8888
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用浏览器&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node server.js 8888
localhost:8888/x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看终端的变化&lt;/p&gt;

&lt;h3 id=&#34;遥想当年李爵士&#34;&gt;遥想当年李爵士&lt;/h3&gt;

&lt;p&gt;Li写了世界上第一个服务器程序&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自己也完成了一个服务器程序，虽然代码是抄来的&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Li写了世界上第一个网站&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自己在&lt;code&gt;/&lt;/code&gt;路径返回一个&lt;code&gt;HTML&lt;/code&gt;内容&lt;/li&gt;
&lt;li&gt;然后再&lt;code&gt;/x&lt;/code&gt;路径返回一个&lt;code&gt;CSS&lt;/code&gt;内容&lt;/li&gt;
&lt;li&gt;然后再&lt;code&gt;/y&lt;/code&gt;路径返回一个&lt;code&gt;JS&lt;/code&gt;内容&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;要记住的&#34;&gt;要记住的&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;response.statusCode = 200
response.setHeader(&#39;Content-Type&#39;, &#39;text/css;charset=utf-8&#39;)
response.write(`some CSS style code`)
response.end()
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;本质就是根据路径返回一个字符串或者文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;后缀是垃圾&#34;&gt;后缀是垃圾&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;URL里的后缀卵用没有，eg:&lt;code&gt;/y.css&lt;/code&gt;不一定是CSS内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Content-Type&lt;/code&gt;才是决定文件类型的关键&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;系统学习http&#34;&gt;系统学习HTTP&lt;/h2&gt;

&lt;p&gt;HTTP到底是个啥&lt;/p&gt;

&lt;h3 id=&#34;必须学会什么&#34;&gt;必须学会什么&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;基础概念（必会知识）：请求和响应&lt;/li&gt;
&lt;li&gt;如何调试（用的是Node.js，可以用&lt;code&gt;log/debugger&lt;/code&gt;，但本质还是HTTP）&lt;/li&gt;
&lt;li&gt;在哪查资料（用的是Node.js，看Node.js文档）&lt;/li&gt;
&lt;li&gt;标准制定者（HTTP规格文档：&lt;code&gt;RFC 2612&lt;/code&gt;等）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;如何学&#34;&gt;如何学&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Copy 抄文档&lt;/li&gt;
&lt;li&gt;Run 放在自己的机器上运行成功&lt;/li&gt;
&lt;li&gt;Modify 加入一点自己的想法，然后重新运行&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;开发者工具&#34;&gt;开发者工具&lt;/h3&gt;

&lt;p&gt;查看&lt;code&gt;Network&lt;/code&gt;：分&lt;code&gt;General&lt;/code&gt;、&lt;code&gt;Response Headers&lt;/code&gt;即请求、&lt;code&gt;Request Headers&lt;/code&gt;即响应&lt;/p&gt;

&lt;h3 id=&#34;http基础概念-请求&#34;&gt;HTTP基础概念：请求&lt;/h3&gt;

&lt;h4 id=&#34;请求的组成&#34;&gt;请求的组成&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;请求动词&lt;/strong&gt; + &lt;em&gt;路径查询参数&lt;/em&gt; + &lt;strong&gt;&lt;em&gt;协议/版本&lt;/em&gt;&lt;/strong&gt;（请求行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Host&lt;/code&gt;:域名或IP及端口（请求头）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Accept&lt;/code&gt;:表示接受的内容格式，text/html（请求头）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Content-Type&lt;/code&gt;:请求体的格式（请求头）&lt;/li&gt;
&lt;li&gt;回车&lt;/li&gt;
&lt;li&gt;请求体（即放上传内容，可以是任意内容，但格式必须在请求头中写明）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试查看&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;curl -v POST --data &#39;上传内容&#39; http://localhost:8888/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;细节&#34;&gt;细节&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;三部分：请求行、请求头、请求体&lt;/li&gt;
&lt;li&gt;请求动词有&lt;code&gt;GET/POST/PUT/PATCH/DELETE&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Get&lt;/code&gt; :获取；&lt;code&gt;Post&lt;/code&gt;: 上传&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/?wd=hi&lt;/code&gt;：路径及查询参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTTP/1.1&lt;/code&gt;协议及版本号&lt;/li&gt;
&lt;li&gt;请求体在&lt;code&gt;GET&lt;/code&gt;中一般为空&lt;/li&gt;
&lt;li&gt;文档位于 &lt;a href=&#34;https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html&#34;&gt;RFC 2612第五章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;大小写不明感（随意，但涉及JS代码是大小写敏感的）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;http基础概念-响应&#34;&gt;HTTP基础概念：响应&lt;/h3&gt;

&lt;h4 id=&#34;响应的组成&#34;&gt;响应的组成&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协议名/版本&lt;/strong&gt; + &lt;em&gt;状态码&lt;/em&gt; + &lt;strong&gt;&lt;em&gt;状态字符串&lt;/em&gt;&lt;/strong&gt;（状态行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Content-Type&lt;/code&gt;：响应体的格式&lt;code&gt;text/html;charset=utf-8&lt;/code&gt;（响应头）&lt;/li&gt;
&lt;li&gt;回车&lt;/li&gt;
&lt;li&gt;响应体（即下载内容，可以在&lt;code&gt;Response&lt;/code&gt;选项中查看具体内容）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;细节-1&#34;&gt;细节&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;三部分：状态行、响应头、响应体&lt;/li&gt;
&lt;li&gt;常见状态码（面试重点）&lt;/li&gt;
&lt;li&gt;文档位于 &lt;a href=&#34;https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html&#34;&gt;RFC 2612 第六章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;要记住关于http-请求和响应的规范写法&#34;&gt;要记住关于HTTP：请求和响应的规范写法&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;请求的组成：请求行「&lt;strong&gt;请求动词&lt;/strong&gt; + &lt;em&gt;路径查询参数&lt;/em&gt; + &lt;strong&gt;&lt;em&gt;协议/版本&lt;/em&gt;&lt;/strong&gt;」+ 请求头「&lt;code&gt;Host&lt;/code&gt; + &lt;code&gt;Accept&lt;/code&gt; + &lt;code&gt;Content-Type&lt;/code&gt;等」+ 请求体&lt;/li&gt;
&lt;li&gt;响应的组成：状态行「&lt;strong&gt;协议名/版本&lt;/strong&gt; + &lt;em&gt;状态码&lt;/em&gt; + &lt;strong&gt;&lt;em&gt;状态字符串&lt;/em&gt;&lt;/strong&gt;」+ 响应头「&lt;code&gt;Content-Type&lt;/code&gt;等」+ 响应体&lt;/li&gt;
&lt;li&gt;常见状态码&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;用curl构造请求&#34;&gt;用curl构造请求&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;回忆 curl 五行请求&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在&lt;code&gt;server.js&lt;/code&gt;开启的前提下：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl -v http://127.0.0.1:8888&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl -v http://localhost:8888&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：verbose，看过程&lt;/li&gt;
&lt;li&gt;注意不是&lt;code&gt;https://&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;设置请求动词&#34;&gt;设置请求动词&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-X POST&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注意大小写敏感&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -v -X POST http://localhost:8888&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -v -X POST http://localhost:8888/xxx?wd=hi&lt;/code&gt;加个查询&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -v -X POST http://localhost:8888/xxx\?wd=hi&lt;/code&gt;加个查询，用Mac的终端&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -v -X POST http://localhost:8888/xxx?wd=hi#nihao&lt;/code&gt;锚点不会发送到服务器&lt;/li&gt;
&lt;li&gt;看终端里返回的请求行&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;设置路径和查询参数&#34;&gt;设置路径和查询参数&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;直接在url后面加&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;设置请求头&#34;&gt;设置请求头&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-H &#39;Name:Value&#39;&lt;/code&gt;或者&lt;code&gt;--header &#39;Name:Value&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;单引号内必须是以键值对的形式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;比如&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl -v -H &#39;Accept:text/html&#39; http://localhost:8888/xxx\?wd=hi#nihao&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;设置请求体&#34;&gt;设置请求体&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d &#39;内容&#39;&lt;/code&gt;或者&lt;code&gt;--data &#39;内容&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;比如&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl -v -H &#39;Accept:text/html&#39; -H &#39;FSociety:FyE&#39; -H &#39;Content-Type:text/plain;charset:utf-8&#39; -d &#39;请求体的内容&#39; http://localhost:8888/xxx\?wd=hi#nihao&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;看终端里返回的请求行&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;用node-js读取请求&#34;&gt;用Node.js读取请求&lt;/h2&gt;

&lt;h3 id=&#34;读取请求动词&#34;&gt;读取请求动词&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;request.method&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;读取路径&#34;&gt;读取路径&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;request.url&lt;/code&gt;路径，带查询参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;纯路径，不带查询参数&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;query&lt;/code&gt;只有查询参数&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;curl http://localhost:8888/\?hihihi=hohoho&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;看终端里返回的请求行&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;读取请求头&#34;&gt;读取请求头&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;request.headers[&#39;Accept&#39;]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;curl -v -H &#39;Hi:nihao&#39; http://localhost:8888/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;看终端里返回的请求行，可以得到所有符合格式的请求头&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;读取请求体&#34;&gt;读取请求体&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;比较复杂，待续~~~&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;用node-js设置响应&#34;&gt;用Node.js设置响应&lt;/h2&gt;

&lt;h3 id=&#34;设置响应状态码&#34;&gt;设置响应状态码&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;response.statusCode = 200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;response.statusCode = 201&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;response.statusCode = 299&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;response.statusCode = 300&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;设置响应头&#34;&gt;设置响应头&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;response.setHeader(&#39;Content-Type&#39;,&#39;text/html&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;设置响应体&#34;&gt;设置响应体&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;response.write(&#39;内容&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可追加内容&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;代码具体细节先不管，直接抄，运行看&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;整个响应都可以有node来控制，包括响应状态码、响应头、响应体&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;404页面是什么&#34;&gt;404页面是什么&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl&lt;/code&gt;不仅可以用来测试，还可用来下载&lt;code&gt;curl https://xxx.jpg &amp;gt; 1.jpg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl&lt;/code&gt;可以完成Chrome除了显示界面外的几乎所有功能&lt;/li&gt;
&lt;li&gt;即使状态码为404，还是能接受到响应体，需要设置&lt;/li&gt;
&lt;li&gt;状态码和内容没有直接的关系，即不管状态码是什么，都可以是任何内容&lt;/li&gt;
&lt;li&gt;大部分服务器不设置404页面，不返回任何其他内容&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;如何调试js&#34;&gt;如何调试JS&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;怎么知道自己写错了还是写对了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;code&gt;console.log调试大法&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;不要相信直觉，相信&lt;code&gt;console.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;debug就是不断&lt;strong&gt;&lt;em&gt;质疑自己&lt;/em&gt;&lt;/strong&gt;的过程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;不信，比如，只看，下面代码哪里有问题？&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;if(path === &#39;/&#39;){
    response.statusCode = 200
    response.setHeader(&#39;Content-Type&#39;,&#39;text/html;charset=utf-8&#39;)
    response.write(`
        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;./style.css&amp;quot;&amp;gt;
        &amp;lt;h1&amp;gt;你好&amp;lt;/h1&amp;gt;
    `)
    response.end()
}else if(path === &#39;./style.css&#39;){
    response.statusCode = 200
    response.setHeader(&#39;Content-Type&#39;,&#39;text/css;charset=utf-8&#39;)
    response.statusCode(`h1{color: red;}`)
    response.end()
}else{
    response.statusCode = 404
    response.end()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;出bug就是因为自己太过自信了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;找到bug之时，就是发现自己傻X之日&lt;/p&gt;

&lt;h3 id=&#34;第一次讲console-log调试大法&#34;&gt;第一次讲console.log调试大法&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;console.log&lt;/code&gt;可以验证对错&lt;/p&gt;

&lt;p&gt;针对之前的错误代码，可以在&lt;code&gt;if&lt;/code&gt;判断前可以加上：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;console.log(&amp;quot;path:&amp;quot; + path);
console.log(&amp;quot;path === &#39;./style.css:&#39;&amp;quot;);
console.log(path === &#39;./style.css&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;false&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;不要相信自己，要相信&lt;code&gt;console.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;答案揭晓：所有HTTP路径都是以&lt;code&gt;/&lt;/code&gt;开头，&lt;code&gt;./&lt;/code&gt;就访问不了，404了&lt;/p&gt;

&lt;p&gt;把自己认为对的变量或者判断语句打出来&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;100元购买阿里云服务器&#34;&gt;100元购买阿里云服务器&lt;/h2&gt;

&lt;h3 id=&#34;购买一台服务器&#34;&gt;购买一台服务器&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;阿里云按量付费，即用即停
最低配，按量计费，Ubuntu 64&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;为什么要用收费的服务器&#34;&gt;为什么要用收费的服务器&lt;/h3&gt;

&lt;h4 id=&#34;好处&#34;&gt;好处&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;一个你可以完全自由掌控的Linux机器&lt;/li&gt;
&lt;li&gt;一个其他人可以访问的IP&lt;/li&gt;
&lt;li&gt;可以作为博客、作品展示、简历展示&lt;/li&gt;
&lt;li&gt;速度快于GitHub&lt;/li&gt;
&lt;li&gt;HK地区机器，可作为FQ代理，但不能备案，所以不选&lt;/li&gt;
&lt;li&gt;如果备案了，还可以把域名绑定到这台机器&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;代价&#34;&gt;代价&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;100RMB用1000hrs&lt;/li&gt;
&lt;li&gt;记得关服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;购买阿里云服务器&#34;&gt;购买阿里云服务器&lt;/h3&gt;

&lt;p&gt;流程&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;注册账号&lt;/li&gt;
&lt;li&gt;进入云服务器ECS（可以搜索）&lt;/li&gt;
&lt;li&gt;创建实例-&amp;gt;&lt;strong&gt;按量付费&lt;/strong&gt;-&amp;gt;入门级-&amp;gt;最便宜或打折优惠&lt;/li&gt;
&lt;li&gt;镜像选&lt;code&gt;Ubuntu 18.04 64位&lt;/code&gt;，最容易搜教程&lt;/li&gt;
&lt;li&gt;其他不改，下一步&lt;/li&gt;
&lt;li&gt;充值100&lt;/li&gt;
&lt;li&gt;公网宽带选&lt;code&gt;按流量+1s&lt;/code&gt;，哦不&lt;code&gt;按流量+1Maps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其他不改，下一步&lt;/li&gt;
&lt;li&gt;勾选服务协议，创建实例，弹出界面点击管理控制台&lt;/li&gt;
&lt;li&gt;等待实例启动成功，状态变为运行中&lt;/li&gt;
&lt;li&gt;购买完毕&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;允许-8888-端口&#34;&gt;允许&lt;code&gt;8888&lt;/code&gt;端口&lt;/h3&gt;

&lt;h4 id=&#34;加入安全组&#34;&gt;加入安全组&lt;/h4&gt;

&lt;p&gt;流程&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;更改实例规格&amp;gt;更多&amp;gt;网络和安全组&amp;gt;加入安全组&lt;/code&gt;，点击加入安全组&lt;/li&gt;
&lt;li&gt;如果没有安全组，就新建一个&lt;/li&gt;
&lt;li&gt;加入之后，&lt;code&gt;更改实例规格&amp;gt;更多&amp;gt;网络和安全组&amp;gt;安全组配置&lt;/code&gt;，点击安全组配置&lt;/li&gt;
&lt;li&gt;点击配置规则&lt;/li&gt;
&lt;li&gt;点击添加安入组规则&lt;/li&gt;
&lt;li&gt;端口填写&lt;code&gt;8888/8888&lt;/code&gt;，（任意超过1234，小于65535的范围比如&lt;code&gt;8000/8999&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;授权对象填写&lt;code&gt;0.0.0.0/0&lt;/code&gt;表示任何人都能访问&lt;/li&gt;
&lt;li&gt;点击确定，并输入手机验证码&lt;/li&gt;
&lt;li&gt;此时，就可通过&lt;code&gt;http://实例IP:8888&lt;/code&gt;访问了&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;请根据实际场景设置授权对象的CIDR，另外，0.0.0.0/0 代表允许或拒绝所有IP的访问，设置时请务必谨慎。参考&lt;a href=&#34;https://help.aliyun.com/document_detail/25475.html?spm=5176.2020520101.0.0.4e974df5oAsNll&#34;&gt;帮助文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;使用服务器&#34;&gt;使用服务器&lt;/h3&gt;

&lt;p&gt;流程&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;重置实例密码：更改实例规格&amp;gt;更多&amp;gt;密码/密钥&amp;gt;重置实例密码&lt;/li&gt;
&lt;li&gt;填写&lt;strong&gt;&lt;em&gt;新的密码两次&lt;/em&gt;&lt;/strong&gt;和手机验证码&lt;/li&gt;
&lt;li&gt;实例状态-&amp;gt;重启实例&lt;/li&gt;
&lt;li&gt;重启完了后点击远程连接&lt;/li&gt;
&lt;li&gt;复制远程密码&lt;/li&gt;
&lt;li&gt;在实例上新建标签，键为key，值为复制的密码&lt;/li&gt;
&lt;li&gt;再次点击远程连接，输入连接密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;login:&lt;/code&gt;后输入&lt;code&gt;root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password:&lt;/code&gt;输入密码，输入的时候没有反应为正常情况&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;现在，已经有一台&lt;code&gt;Linux&lt;/code&gt;机器，不管是阿里云上的，还是本地的虚拟机&lt;/p&gt;

&lt;p&gt;具体过程可能改版更新，密码可以随时修改，远程连接码不一定使用，使用实例密码即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;服务器配置&#34;&gt;服务器配置&lt;/h2&gt;

&lt;h3 id=&#34;ssh-远程登录&#34;&gt;&lt;code&gt;ssh&lt;/code&gt;远程登录&lt;/h3&gt;

&lt;p&gt;流程&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;首先登陆&lt;code&gt;root&lt;/code&gt;账户（阿里云网页登陆或者其他）&lt;/li&gt;
&lt;li&gt;成功看到&lt;code&gt;Welcome...&lt;/code&gt;后&lt;/li&gt;
&lt;li&gt;把本地的SSH公钥复制到&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;，用&lt;code&gt;echo &#39;xxx公钥&#39; &amp;gt;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;建议把上面命令在VSCode上编辑好再复制&lt;/li&gt;
&lt;li&gt;新建终端，在本地运行&lt;code&gt;ssh root@实例IP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;看到&lt;code&gt;Welcome to Alibaba Cloud Elastic Compute Service !&lt;/code&gt;后，此时，就可以在本地终端用&lt;code&gt;ssh&lt;/code&gt;操作云服务器了&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;成功界面&#34;&gt;成功界面&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Welcome to...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;用&lt;code&gt;exit&lt;/code&gt;退出，logout&lt;/p&gt;

&lt;h4 id=&#34;刚才做了什么&#34;&gt;刚才做了什么&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;把本地的公钥复制到阿里云的&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在本地用&lt;code&gt;ssh root@实例IP&lt;/code&gt;来远程操作云机器&lt;/li&gt;
&lt;li&gt;以后都用&lt;code&gt;ssh root@实例IP&lt;/code&gt;的方式即可&lt;/li&gt;
&lt;li&gt;可以在hosts里给实例IP取个别名&lt;/li&gt;
&lt;li&gt;要退出云机器，输入&lt;code&gt;exit&lt;/code&gt;，回车&lt;/li&gt;
&lt;li&gt;如果卡了，直接&lt;code&gt;Ctrl + w&lt;/code&gt;退出终端&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;如何防止-ssh卡住-可跳过&#34;&gt;如何防止&lt;code&gt;ssh卡住&lt;/code&gt;（可跳过）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;最后加下面两句话&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Host *
ServerAliveInterval 30
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;用VScode打开这个文件会失败&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以用两次echo搞定&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;Host *&amp;quot; &amp;gt;&amp;gt; /etc/ssh/ssh_config
echo &amp;quot;ServerAliveInterval 30&amp;quot; &amp;gt;&amp;gt; /etc/ssh/ssh_config
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;不要少写了空格&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重启终端生效，如果没有就重启&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;从这里&lt;a href=&#34;https://unix.stackexchange.com/questions/200239/how-can-i-keep-my-ssh-sessions-from-freezing/200256#200256&#34;&gt;抄来的&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;工具能用就行&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;创建普通应用账户&#34;&gt;创建普通应用账户&lt;/h3&gt;

&lt;h4 id=&#34;为什么&#34;&gt;为什么&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;的&lt;code&gt;root&lt;/code&gt;账户拥有最高权限，一旦被攻克&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;步骤&#34;&gt;步骤&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;root&lt;/code&gt;账户账户下&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adduser yourname&lt;/code&gt;注意必须都小写&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Enter new UNIX password:&lt;/code&gt;输入密码&lt;/li&gt;
&lt;li&gt;再次输入密码，可以和&lt;code&gt;root&lt;/code&gt;的一样&lt;/li&gt;

&lt;li&gt;&lt;p&gt;一直回车，直到结束，运行如下命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /home/yourname/.ssh #创建路径
cp ~/.ssh/authorized_keys /home/yourname/.ssh/ #复制公钥
chmod 755 /home/yourname/.ssh/authorized_keys #将路径变为可读
chown yourname:yourname /home/yourname/.ssh/authorized_keys #把key的拥有者变更为登录用户
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;现在&lt;code&gt;ssh yourname@实例IP&lt;/code&gt;就可以使用了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;多账户示意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh root@ip&lt;/code&gt;访问&lt;code&gt;root /root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh frank@ip&lt;/code&gt;访问&lt;code&gt;frank /home/frank&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sudo&#34;&gt;&lt;code&gt;sudo&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&#34;给-user-添加-sudo-权限&#34;&gt;给&lt;code&gt;user&lt;/code&gt;添加&lt;code&gt;sudo&lt;/code&gt;权限&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;adduser username sudo&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;sudo-是什么&#34;&gt;&lt;code&gt;sudo&lt;/code&gt;是什么&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;全称&lt;code&gt;super user do&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;类似于win的「以管理员身份运行」&lt;/li&gt;
&lt;li&gt;平时不该使用&lt;code&gt;root&lt;/code&gt;账户，而是&lt;code&gt;frank&lt;/code&gt;账户&lt;/li&gt;
&lt;li&gt;遇到特殊操作，就在前面加&lt;code&gt;sudo&lt;/code&gt;，请出&lt;code&gt;root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;需要输入&lt;code&gt;frank&lt;/code&gt;的密码，不是&lt;code&gt;root&lt;/code&gt;的密码&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;ctrl + a&lt;/code&gt;可以快速回到命令前面，&lt;code&gt;ctrl + e&lt;/code&gt;到最后&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo!!&lt;/code&gt;的意思是用&lt;code&gt;sudo&lt;/code&gt;执行上一句命令&lt;/li&gt;
&lt;li&gt;比如运行&lt;code&gt;apt-get update&lt;/code&gt;更新包&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;部署-node-js-代码&#34;&gt;部署 Node.js 代码&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;安装过&lt;code&gt;Node.js&lt;/code&gt;和&lt;code&gt;git&lt;/code&gt;的可跳过，直接看&lt;code&gt;### 部署应用&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;安装-node-js-8-x&#34;&gt;安装&lt;code&gt;Node.js 8.x+&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;流程&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
sudo sed -i &#39;s/deb.nodesource.com\/node_12.x/mirrors.tuna.tsinghua.edu.cn\/nodesource\/deb_12.x/g&#39; /etc/apt/sources.list.d/nodesource.list
sudo apt-get update
sudo apt-get install -y nodejs
node -v
npm -v
npx -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装-git&#34;&gt;安装&lt;code&gt;git&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&#34;命令&#34;&gt;命令&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install git
# 遇到[Y/n]输入回车，或者y回车
git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;注意&#34;&gt;注意&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;由于远程无界面环境，安装不了VSCode，虽然vim可以&lt;/li&gt;
&lt;li&gt;不使用&lt;code&gt;git commit -v&lt;/code&gt;，改用&lt;code&gt;git commit -m &amp;quot;xxx&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果想学习&lt;code&gt;vim&lt;/code&gt;，在本地电脑输入&lt;code&gt;vimtutor&lt;/code&gt;看完&lt;/li&gt;
&lt;li&gt;一开始不要浪费时间学&lt;code&gt;vim&lt;/code&gt;，推荐若愚的&lt;a href=&#34;https://xiedaimala.com/tasks/2ed4ca18-f1d6-42df-baab-69657416bdc7&#34;&gt;vim教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自行搜报错信息&lt;/li&gt;
&lt;li&gt;实在不行，就去阿里云页面重启机器即可&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;部署应用&#34;&gt;部署应用&lt;/h3&gt;

&lt;h4 id=&#34;下载代码&#34;&gt;下载代码&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/FrankFang/nodejs-test.git
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;这个地址可以改成仓库的&lt;code&gt;https&lt;/code&gt;地址，只是下载测试，所以不要使用&lt;code&gt;ssh&lt;/code&gt;地址，使用&lt;code&gt;https&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;启动应用2&#34;&gt;启动应用2&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd nodejs-test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动命令：&lt;code&gt;node server.js 8888 &amp;gt; log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把启动命令做成&lt;code&gt;start&lt;/code&gt;文件：&lt;code&gt;touch start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加可执行权限：&lt;code&gt;chmod +x ./start&lt;/code&gt;，使其可执行带&lt;code&gt;rw-x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运行&lt;code&gt;sh ./start&lt;/code&gt;得到一个进程号&lt;code&gt;pid&lt;/code&gt;，记下来，比如是：&lt;code&gt;[1] 19225&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail log&lt;/code&gt;看&lt;code&gt;log&lt;/code&gt;内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill -9 pid&lt;/code&gt;可以关掉进程，即&lt;code&gt;kill -9 19225&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;killall node&lt;/code&gt;可以关掉所有&lt;code&gt;node&lt;/code&gt;进程&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;如何重启应用&#34;&gt;如何重启应用&lt;/h3&gt;

&lt;h4 id=&#34;上传代码&#34;&gt;上传代码&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;本地改完代码后，&lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;下载代码2&#34;&gt;下载代码2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh frank@实例IP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd nodejs-test/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;killall node&lt;/code&gt;（因为忘了进程号，实际上可以记下来）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sh./start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启完毕&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;回顾&#34;&gt;回顾&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;请求和响应分别有那几部分&lt;/li&gt;
&lt;li&gt;请求动词有哪些&lt;/li&gt;
&lt;li&gt;状态码有哪些&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;curl&lt;/code&gt;构造请求&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;Node.js&lt;/code&gt;读取请求，造响应&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTML/CSS/JS&lt;/code&gt;本质都是字符串&lt;/li&gt;
&lt;li&gt;部署&lt;code&gt;Node.js&lt;/code&gt;应用到云服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;阿里云停机操作&#34;&gt;阿里云停机操作&lt;/h2&gt;

&lt;h3 id=&#34;记得用完服务器机器要关机-并选择停止计费-4&#34;&gt;&lt;strong&gt;记得用完服务器机器要关机（并选择停止计费）&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&#34;记得用完服务器机器要关机-并选择停止计费-5&#34;&gt;&lt;strong&gt;记得用完服务器机器要关机（并选择停止计费）&lt;/strong&gt;&lt;/h4&gt;

&lt;h2 id=&#34;node-js-初体验&#34;&gt;Node.js 初体验&lt;/h2&gt;

&lt;h2 id=&#34;方便大家复制的代码&#34;&gt;方便大家复制的代码&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -v http://127.0.0.1:8888

request.getHeader(&#39;Accept&#39;)
response.statusCode = 200
response.setHeader(&#39;Content-Type&#39;, &#39;text/html&#39;);
response.write(&#39;内容&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;有问题的代码&#34;&gt;有问题的代码&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;if(path === &#39;/&#39;){
  response.statusCode = 200
  response.setHeader(&#39;Content-Type&#39;, &#39;text/html;charset=utf-8&#39;)
  response.write(`
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;./style.css&amp;quot;&amp;gt;
    &amp;lt;h1&amp;gt;你好&amp;lt;/h1&amp;gt;
  `)
  response.end()
} else if(path === &#39;./style.css&#39;){
  response.statusCode = 200
  response.setHeader(&#39;Content-Type&#39;, &#39;text/css;charset=utf-8&#39;)
  response.write(`h1{color: red;}`)
  response.end()
} else {
  response.statusCode = 404
  response.end()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-远程登录-1&#34;&gt;ssh 远程登录&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;复制本地~/.ssh/id_rsa.pub内容&#39; &amp;gt;&amp;gt; ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;防止-ssh-卡住&#34;&gt;防止 ssh 卡住&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;Host *&amp;quot; &amp;gt;&amp;gt; /etc/ssh/ssh_config
echo &amp;quot;  ServerAliveInterval 30&amp;quot; &amp;gt;&amp;gt; /etc/ssh/ssh_config
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建应用账户&#34;&gt;创建应用账户&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adduser frank
mkdir  /home/frank/.ssh
cp ~/.ssh/authorized_keys /home/frank/.ssh/
chmod 755 /home/frank/.ssh/authorized_keys
chown frank:frank /home/frank/.ssh/authorized_keys

adduser frank sudo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装-node-js-8和git&#34;&gt;安装 Node.js 8和git&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -
sudo sed -i &#39;s/deb.nodesource.com\/node_8.x/mirrors.tuna.tsinghua.edu.cn\/nodesource\/deb_8.x/g&#39; /etc/apt/sources.list.d/nodesource.list
sudo apt-get update
sudo apt-get install -y nodejs
node -v
npm -v
npx -v

sudo apt install git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;部署应用2&#34;&gt;部署应用2&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/FrankFang/nodejs-test.git
cd nodejs-test
touch log
启动命令：node server.js 8888 &amp;gt; log 2&amp;gt;&amp;amp;1 &amp;amp;
把启动命令做成 start 文件
添加执行权限 chmod +x ./start
运行 sh ./start 得到一个进程号 pid
tail log 看 log 内容
kill -9 pid 可以关掉进程
killall node 可以关掉所有 node 进程
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;如何重启应用2&#34;&gt;如何重启应用2&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh frank@实例ip
cd nodejs-test
git pull
killall node（因为忘了进程号，实际上可以记下来）
sh ./start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;强烈建议购买阿里云服务器最低配&lt;/p&gt;

&lt;h2 id=&#34;记得用完服务器机器要关机-并选择停止计费-6&#34;&gt;&lt;strong&gt;!记得用完服务器机器要关机（并选择停止计费!）&lt;/strong&gt;&lt;/h2&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;参考文章&#34;&gt;参考文章&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-29-11-22-40.js%20%E6%9C%8D%E5%8A%A1%E5%99%A8.pdf&#34;&gt;HTTP 请求与响应 &amp;amp; Node.js 服务器.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://zhih.me/how-the-web-works/&#34;&gt;WEB是如何工作的 By底噪&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;相关文章&#34;&gt;相关文章&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>【HTTP非全解】浅析 URL</title>
      <link>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E6%B5%85%E6%9E%90-url/</link>
      <pubDate>Thu, 16 Jan 2020 06:42:43 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E6%B5%85%E6%9E%90-url/</guid>
      
        <description>

&lt;p&gt;内容提要：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;URL 包含哪几部分，每部分分别有什么作用&lt;/li&gt;
&lt;li&gt;DNS 的作用是什么，nslookup 命令怎么用&lt;/li&gt;
&lt;li&gt;IP 的作用是什么，ping 命令怎么用&lt;/li&gt;
&lt;li&gt;域名是什么，分别哪几类域名&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;url-uniform-resource-locator-的组成部分&#34;&gt;URL（Uniform Resource Locator）的组成部分&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;传输协议&lt;/code&gt; + &lt;strong&gt;域名或IP&lt;/strong&gt; + 端口号 +&lt;code&gt;路径&lt;/code&gt; + &lt;code&gt;查询字符串&lt;/code&gt; + &lt;em&gt;锚点&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;eg.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://&lt;/code&gt;&lt;strong&gt;www.baidu.com&lt;/strong&gt;&lt;code&gt;/s&lt;/code&gt;&lt;strong&gt;wd=hello&amp;amp;rsv_spt=1&lt;/strong&gt;&lt;code&gt;#5&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;==传输协议== + &lt;strong&gt;域名或IP&lt;/strong&gt; + 端口号 + ++路径++ + &lt;code&gt;查询字符串&lt;/code&gt; + &lt;em&gt;锚点&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;eg.&lt;/p&gt;

&lt;p&gt;==https://==&lt;strong&gt;www.baidu.com&lt;/strong&gt;++/s++&lt;code&gt;wd=hello&amp;amp;rsv_spt=1&lt;/code&gt;&lt;em&gt;#5&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;传输协议（ scheme: [protocal] ）：&lt;code&gt;http&lt;/code&gt;、&lt;code&gt;https&lt;/code&gt;、&lt;code&gt;ftp&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;域名（ [//authority] Domain Name ）：&lt;code&gt;www.baidu.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;端口（ :Port ）：通常省略，&lt;code&gt;:80&lt;/code&gt;、&lt;code&gt;:443&lt;/code&gt;、&lt;code&gt;:8080&lt;/code&gt;等（http 大部分默认80, https默认443）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;[//authority] = [userinfo@]host[:port]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;路径（ Path to the file）：&lt;code&gt;/s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查询参数（[?query] Parameters ）：&lt;code&gt;wd=hello&amp;amp;rsv_spt=1&lt;/code&gt;或者&lt;code&gt;?key1=value1&amp;amp;key2=value2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;锚点（ [#fragment] Anchor ）：&lt;code&gt;#5&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;另一个常见的 URL（URI） 的例子：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=Special:随机页面#5&#34;&gt;https://zh.wikipedia.org/w/index.php?title=Special:随机页面#5&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https&lt;/code&gt;：协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zh.wikipedia.org&lt;/code&gt;：域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/w/index.php&lt;/code&gt;：路径（不同的页面）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?title=Special&lt;/code&gt;:随机页面：查询参数（相同页面，不同内容）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#5&lt;/code&gt;：锚点（相同页面，相同内容，不同位置）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其中若不写端口号，则表示使用
https 对应的默认端口号 443&lt;/p&gt;

&lt;p&gt;&lt;code&gt;localhost:8080&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;dns-domain-name-system-域名系统&#34;&gt;DNS（Domain Name System）：域名系统&lt;/h2&gt;

&lt;p&gt;作用：根据域名查出IP地址&lt;/p&gt;

&lt;p&gt;即：将域名解析为IP 地址&lt;/p&gt;

&lt;h2 id=&#34;nslookup可查询ip-dns-地址&#34;&gt;nslookup可查询IP（DNS）地址&lt;/h2&gt;

&lt;p&gt;直接使用可以查询到域名的 A 记录&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;nslookup 命令用于查询 DNS 的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# nslookup + 域名
nslookup domain [dns-server]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nslookup xmasuhai.xyz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ip的作用-ping-命令用法&#34;&gt;IP的作用，ping 命令用法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;一是定位一台设备&lt;/li&gt;
&lt;li&gt;二是封装数据报文跟其他设备交流&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;ping&lt;/code&gt; 命令是常用的网络命令，它通常用来测试与目标主机的连通性。&lt;/p&gt;

&lt;p&gt;即：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;标识主机，具体地说，标识其网络接口，并且提供主机在网络中的位置，就此提供创建到达该主机的路径的能力。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;每个 IP 数据包的标头包含了发送主机的 IP 地址和目的主机的 IP 地址。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ping [参数][主机名或ip地址]
ping baidu.com
ping localhost
ping 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用&lt;code&gt;Ctrl + c&lt;/code&gt;中断&lt;/p&gt;

&lt;h2 id=&#34;域名-domain-name&#34;&gt;域名（Domain Name）&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;是互联网的一项服务，主要用于域名与 IP 地址的相互转换&lt;/p&gt;

&lt;p&gt;如果要访问一个地址（使用域名），都要先通过DNS查询域名对应的IP地址，才能进行访问&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;域名分类&#34;&gt;域名分类&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;域名分顶级域名，二级域名和三级域名&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;比如对于 &lt;code&gt;www.baidu.com&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;顶级域名：&lt;code&gt;com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;二级域名：&lt;code&gt;baidu.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;三级域名：&lt;code&gt;www.baidu.com&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;域名的第一级是顶级域，它包括通用顶级域，例如&lt;code&gt;.com&lt;/code&gt;、&lt;code&gt;.net&lt;/code&gt; 和&lt;code&gt;.org&lt;/code&gt;；&lt;/p&gt;

&lt;p&gt;以及国家和地区顶级域，例如&lt;code&gt;.us&lt;/code&gt;、&lt;code&gt;.cn&lt;/code&gt;和&lt;code&gt;.tk&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;完整域名的所有字符加起来不得超过 253 个 ASCII 字符的总长度。&lt;/p&gt;

&lt;p&gt;当每一级都使用单个字符时，限制为 127 个级别：127 个字符加上 126 个点的总长度为 253。&lt;/p&gt;

&lt;p&gt;但实际上，某些域名可能具有其他限制；也没有只有一个字符的域名后缀。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;内容提要卐，后面是视频记录流水账&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;网络和-ip&#34;&gt;网络和 IP&lt;/h2&gt;

&lt;p&gt;李爵士的发明&lt;/p&gt;

&lt;p&gt;WWW=URL+HTTP+HTML&lt;/p&gt;

&lt;p&gt;&lt;code&gt;HyperText Transfer Protocol&lt;/code&gt;协议&lt;/p&gt;

&lt;p&gt;IP: &lt;code&gt;Internet Protocol&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;ip-internet-protocol-主要约定&#34;&gt;IP（Internet Protocol）主要约定&lt;/h3&gt;

&lt;p&gt;1.如何定位一台设备
2.如何封装数据报文（用来和其他设备交流）&lt;/p&gt;

&lt;p&gt;互联网（not WWW），至少一个独特的IP&lt;/p&gt;

&lt;h4 id=&#34;ip分内网和外网&#34;&gt;IP分内网和外网&lt;/h4&gt;

&lt;p&gt;设备 路由器 电信DNS服务器 其他用户&lt;/p&gt;

&lt;h4 id=&#34;获取外网ip-买-蹭&#34;&gt;获取外网IP 买 | 蹭&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;首先，你需要租用宽带（电信或者联通）&lt;/li&gt;
&lt;li&gt;其次，你需要购买一个路由器（有时候也被叫做“网关”）&lt;/li&gt;
&lt;li&gt;当路由器连接上电信或者联通的服务器后，路由器就会获得一个外网的IP，所有通过路由器连接的设备，他们的外网IP都是一致的。&lt;/li&gt;
&lt;li&gt;注意：如果当你重启路由器之后，可能会被分配一个新的外网IP，也就是说，路由器是没有一个固定的外网IP，除非高价买，企业级需要&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;内网ip&#34;&gt;内网IP&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;路由器创建内网，内网中的设备使用内网IP，格式&lt;code&gt;192.168.xxx.xxx&lt;/code&gt;、&lt;code&gt;192.168.1.1&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;路由再给每一个内网中的设备(PC、手机)分配一个不同的内网IP&lt;/li&gt;
&lt;li&gt;内网的所有设备都有一个相同的外网IP&lt;/li&gt;
&lt;li&gt;路由器会为每一个内网中的设备分配一个不同的内网IP&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;内网ip固定&#34;&gt;内网IP固定&lt;/h4&gt;

&lt;h4 id=&#34;查看ip&#34;&gt;查看IP&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ping xxx.com
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ipconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看&lt;code&gt;ip38.com&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;路由器的功能&#34;&gt;路由器的功能&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;路由器有两个IP,内外各一&lt;/li&gt;
&lt;li&gt;内网中的设备可互相访问，但不可直接访问外网&lt;/li&gt;
&lt;li&gt;内网设备通过路由器中转，访问外网&lt;/li&gt;
&lt;li&gt;外网设备无法访问你的内网，不管直接间接&lt;/li&gt;
&lt;li&gt;外网把内容推送到内网，必须通过路由&lt;/li&gt;
&lt;li&gt;内外隔绝，路由是唯一联通点，即网关&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;几个特殊的ip&#34;&gt;几个特殊的IP&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;表示自己&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localhost&lt;/code&gt;通过hosts指定为自己&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0.0.0.0&lt;/code&gt;不表示任何设备，后端用&lt;/li&gt;
&lt;li&gt;localhost是个域名，不是地址，它可以被配置为任意的 IP 地址，不过通常情况下都指向 127.0.0.1(ipv4)和 &lt;a href=&#34;ipv6&#34;&gt;::1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;eg.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;127.0.0.1	localhost
255.255.255.255	broadcasthost
::1             localhost
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;改为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;127.0.0.1	xmas
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就能在地址栏用&lt;code&gt;xmas&lt;/code&gt;访问&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;问：hosts 文件在哪？&lt;/p&gt;

&lt;p&gt;答： 在 Windows 系统中，hosts 位于 &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;在 macOS / Linux系统中，hosts 位于 &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;问：在window或mac上，当我们访问&lt;code&gt;localhost&lt;/code&gt;时，究竟在访问哪里？&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/59644b5bf2e8&#34;&gt;修改host文件以及localhost与127.0.0.1的区别&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/23940717&#34;&gt;localhost、127.0.0.1 和 本机IP 三者的区别?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Kimi-Gao/Program-Blog/issues/52&#34;&gt;localhost和127.0.0.1的异同&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一些概念&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;（1）127.0.0.1在Linux也好，Windows也好，都会有这个循回地址的。&lt;/p&gt;

&lt;p&gt;（2）在IP地址的规定中，第一部分是1~126为A类地址，128~191为B类地址，那么中间留的127.0.0.1被称为本地回环地址，主要作用有两个：一是测试本机的网络配置，能PING通127.0.0.1说明本机的网卡和IP协议安装都没有问题；另一个作用是某些SERVER/CLIENT的应用程序在运行时需调用服务器上的资源，一般要指定SERVER的IP地址，但当该程序要在同一台机器上运行而没有别的SERVER时就可以把SERVER的资源装在本机，SERVER的IP地址设为127.0.0.1也同样可以运行。&lt;/p&gt;

&lt;p&gt;（3）这个地址也是给本机loop back接口所预留的IP地址，它是为了让上层应用联系本机用的，如果没有这个loop back接口通常上层应用无法与自己联系，因为它仍然会把数据往IP层发送，数据到了IP层如果发现目的地是自己，则回被回环驱动程序送回。因此通过这个地址也可以测试TCP/IP的安装是否成功，就是驱动，网卡 都是否正常，但无法测试出具体TCP/IP的配置是否正确，也无法测试出网卡是否正常，因为数据在离开IP层之前就已经被送回去了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;端口&#34;&gt;端口&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;一台机子可提供很多服务，每个服务一个号码，即端口号&lt;code&gt;port&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;不同的服务&#34;&gt;不同的服务&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;提供&lt;code&gt;HTTP&lt;/code&gt;服务，最好使用&lt;code&gt;80&lt;/code&gt;端口&lt;/li&gt;
&lt;li&gt;提供&lt;code&gt;HTTPS&lt;/code&gt;服务，最好&lt;code&gt;443&lt;/code&gt;端口&lt;/li&gt;
&lt;li&gt;一共有65535个端口，&lt;code&gt;FTP&lt;/code&gt;是21端口&lt;/li&gt;
&lt;li&gt;该用什么端口：&lt;a href=&#34;https://zh.wikipedia.org/wiki/TCP/UDP%E7%AB%AF%E5%8F%A3%E5%88%97%E8%A1%A8#0.E5.88.B01023.E5.8F.B7.E7.AB.AF.E5.8F.A3&#34;&gt;端口对应的服务列表wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;其他使用规则&#34;&gt;其他使用规则&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;0到1023（2的10次方减1，计1024个）号端口，留给系统使用，自己使用须取得管理权限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http-server&lt;/code&gt;默认使用&lt;code&gt;8080&lt;/code&gt;端口&lt;/li&gt;
&lt;li&gt;一个端口被占用时，只能换另一个&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;IP是用来定位一个设备的&lt;/p&gt;

&lt;p&gt;端口是用来定位一个设备的服务&lt;/p&gt;

&lt;p&gt;有了IP和端口，就可以定位一个设备提供的服务&lt;/p&gt;

&lt;p&gt;比如百度的设备提供网页服务；腾讯的设备提供聊天服务；淘宝的设备提供支付服务等&lt;/p&gt;

&lt;p&gt;这些服务都可以通过IP和端口&lt;strong&gt;唯一确定&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;总之，IP和端口缺一不可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;域名-路径-查询参数-锚点&#34;&gt;域名、路径、查询参数、锚点&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;qq.com&lt;/code&gt;，&lt;code&gt;t.tt&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;域名-对ip的别称&#34;&gt;域名：对IP的别称&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ping baidu.com

#将得到四个回复（win），mac 需ctrl+c中断
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;baidu.com&lt;/code&gt;对应&lt;code&gt;ping baidu.com&lt;/code&gt;，&lt;code&gt;qq.com&lt;/code&gt;对应&lt;code&gt;ping qq.com&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;知识点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一个域名可以对应不同IP，即均衡负载，分流，防止一台机子扛不住，或者恶意的&lt;code&gt;DDos&lt;/code&gt;攻击，网站优化策略&lt;/li&gt;
&lt;li&gt;一个IP可对应不同域名，即穷开发者的共享主机&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;域名和IP，怎么对应起来？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过DNS&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;当你输入-xiedaimala-com&#34;&gt;当你输入&lt;code&gt;xiedaimala.com&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Chrome开发者工具中，&lt;code&gt;Network&lt;/code&gt;面板，&lt;code&gt;xiedaimala.com&lt;/code&gt;点击，Headers里，请求根目录&lt;code&gt;https://xiedaimala.com/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;得到响应Response 一串HTML代码，请求CSS，请求图片，请求js等&lt;/p&gt;

&lt;h4 id=&#34;过程&#34;&gt;过程&lt;/h4&gt;

&lt;p&gt;客户端向DNS服务器（DNS服务器有自己的IP地址）发送域名查询请求&lt;/p&gt;

&lt;p&gt;DNS服务器告知客户机Web服务器的IP地址&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;提供DNS的服务器的服务商：电信或联通等&lt;/li&gt;
&lt;li&gt;浏览器向提供DNS的服务器询问&lt;code&gt;xiedaimala.com&lt;/code&gt;对应什么IP&lt;/li&gt;
&lt;li&gt;服务器回答一个IP（具体过程三次握手、四次握手，面试必问）&lt;/li&gt;
&lt;li&gt;请求内容是查看这个网址的网页&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg.&lt;code&gt;xiedaimala.com&lt;/code&gt;的首页&lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;why-80-或-443-端口&#34;&gt;why &lt;code&gt;80&lt;/code&gt;或&lt;code&gt;443&lt;/code&gt;端口&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;服务器默认用&lt;code&gt;80&lt;/code&gt;提供&lt;code&gt;http&lt;/code&gt;服务&lt;/li&gt;
&lt;li&gt;服务器默认用&lt;code&gt;443&lt;/code&gt;提供&lt;code&gt;https&lt;/code&gt;服务&lt;/li&gt;
&lt;li&gt;在开发者工具查看具体端口&lt;/li&gt;
&lt;li&gt;不需要写在地址栏里，写了也帮你消掉&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;nslookup&#34;&gt;&lt;code&gt;nslookup&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nslookup -qt=[type] domain [dns-server]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;type&lt;/code&gt;可以是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A 地址记录&lt;/li&gt;
&lt;li&gt;AAAA 地址记录（IPv6）&lt;/li&gt;
&lt;li&gt;CNAME 别名记录&lt;/li&gt;
&lt;li&gt;HINFO 硬件配置记录，包括 CPU、操作系统信息
等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;询问域名，域名&lt;code&gt;ns&lt;/code&gt;，寻找&lt;code&gt;lookup&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nslookup baidu.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认自动设置
电信DNS
&lt;code&gt;114.114.114.114&lt;/code&gt;
备用
&lt;code&gt;114.114.115.115&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但设置了可能会被代理商嵌入广告&lt;/p&gt;

&lt;h3 id=&#34;题外话&#34;&gt;题外话&lt;/h3&gt;

&lt;h4 id=&#34;www&#34;&gt;&lt;code&gt;www&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;A：&lt;code&gt;www.xiedaimala.com&lt;/code&gt;和B：&lt;code&gt;xiedaimala.com&lt;/code&gt;不是同一个域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com&lt;/code&gt;（没有点）是顶级域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xiedaimala.com&lt;/code&gt;是二级域名（俗称一级域名）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www.xiedaimala.com&lt;/code&gt;是三级域名（俗称二级）&lt;/li&gt;
&lt;li&gt;祖父子关系&lt;/li&gt;
&lt;li&gt;&lt;code&gt;github.io&lt;/code&gt;把子域名&lt;code&gt;xxx.github.io&lt;/code&gt;免费给你使用&lt;/li&gt;
&lt;li&gt;A和B可以不是同一家公司&lt;/li&gt;
&lt;li&gt;www是多余的，历史残留，脱x子放*&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;如何请求不同的页面&#34;&gt;如何请求不同的页面&lt;/h4&gt;

&lt;h5 id=&#34;用路径&#34;&gt;用路径&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML&#34;&gt;&lt;code&gt;https://developer.mozilla.org/zh-CN/docs/Web/HTML&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS&#34;&gt;&lt;code&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;工具&#34;&gt;工具&lt;/h5&gt;

&lt;p&gt;使用Chrome开发者工具&lt;strong&gt;Network&lt;/strong&gt;面板查看区别&lt;/p&gt;

&lt;h4 id=&#34;同一个页面-不同内容&#34;&gt;同一个页面，不同内容&lt;/h4&gt;

&lt;p&gt;用查询参数：&lt;code&gt;https://xxx.com/s?wd=hello&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baidu.com/s?wd=hi&#34;&gt;&lt;code&gt;https://www.baidu.com/s?wd=hi&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baidu.com/s?wd=hello&#34;&gt;&lt;code&gt;https://www.baidu.com/s?wd=hello&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;同一个内容-页面-不同位置&#34;&gt;同一个内容（页面），不同位置&lt;/h4&gt;

&lt;h5 id=&#34;用锚点&#34;&gt;用锚点&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS#%E5%8F%82%E8%80%83%E4%B9%A6&#34;&gt;&lt;code&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS#参考书&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS#%E6%95%99%E7%A8%8B&#34;&gt;&lt;code&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS#教程&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;锚点就是文档内部的定位&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;锚点看起来有中文，实际不支持中文&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#参考书&lt;/code&gt;会变成&lt;code&gt;#%E5%8F%82%E8%80%83%E4%B9%A6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;锚点不会传给服务器，所以是无法在&lt;code&gt;Network&lt;/code&gt;面板里看到的&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;url&#34;&gt;URL&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;统一资源定位符(Uniform Resource Locator),简称URL,是因特网上标准的资源的地址（Address）&lt;/p&gt;

&lt;p&gt;Every HTTP &lt;strong&gt;URL&lt;/strong&gt; conforms to the syntax of a generic &lt;strong&gt;URI&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;每个有效的 URI 都指向一个独特的资源。这个资源可以是一个 HTML 页面，一个 CSS 文档，一幅图像、视频、邮件、PDF等&lt;/p&gt;

&lt;p&gt;The URI generic syntax consists of a hierarchical sequence of five components&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;URI = scheme:[//authority]path[?query][#fragment]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-authority = [userinfo@]host[:port]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/URL&#34;&gt;wiki:URL&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;组成&#34;&gt;组成&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;传输协议&lt;/code&gt; + &lt;strong&gt;域名或IP&lt;/strong&gt; + 端口号 +&lt;code&gt;路径&lt;/code&gt; + &lt;code&gt;查询字符串&lt;/code&gt; + &lt;em&gt;锚点&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;eg.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://&lt;/code&gt;&lt;strong&gt;www.baidu.com&lt;/strong&gt;&lt;code&gt;/s&lt;/code&gt;&lt;strong&gt;wd=hello&amp;amp;rsv_spt=1&lt;/strong&gt;&lt;code&gt;#5&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;**www.baidu.com**&lt;/code&gt;是域名。 表明正在请求哪个 Web 服务器。或者，可以直接使用 IP address, 但因为不便，所以不常使用。&lt;/p&gt;

&lt;p&gt;就算没写，也应知道端口，&lt;code&gt;HTTPS&lt;/code&gt;默认端口&lt;code&gt;443&lt;/code&gt;，通常省略&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/path/to/index.html&lt;/code&gt; 是网络服务器上资源的路径，路径表示访问哪个网页&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ftp://&lt;/code&gt;是文件传输协议，不属于&lt;code&gt;www&lt;/code&gt;，本地或局域网&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wd=hello&amp;amp;rsv_spt=1&lt;/code&gt; 或&lt;code&gt;?key1=value1&amp;amp;key2=value2&lt;/code&gt; 是提供给网络服务器的额外参数。 这些参数是用 &amp;amp; 符号分隔的键/值对列表。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wd=hello&amp;amp;rsv_spt=1&lt;/code&gt;：&lt;code&gt;查询字符串&lt;/code&gt;表示页面的展示内容，第几部分，第几章，第几页，或者查询关键词&lt;/p&gt;

&lt;p&gt;在返回资源之前，Web服务器可以使用这些参数来执行额外的操作。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#Anchor&lt;/code&gt;或&lt;code&gt;#SomewhereInTheDocument&lt;/code&gt;是资源本身的另一部分的锚点。&lt;/p&gt;

&lt;p&gt;锚点表示资源中的一种“书签”，给浏览器显示位于该“加书签”位置的内容的方向。
例如，
在 HTML 文档上，浏览器将滚动到定义锚点的位置&lt;/p&gt;

&lt;p&gt;在视频或音频文档上，浏览器将尝试转到锚代表的时间&lt;/p&gt;

&lt;p&gt;＃后面的部分（也称为片段标识符）[fragment]从来没有发送到请求的服务器&lt;/p&gt;

&lt;p&gt;锚点会被浏览器‘吃掉’，锚点只和浏览器有关，没必要发送给服务器&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;服务器无法接收&lt;code&gt;#&lt;/code&gt;之后的内容，参数&lt;/strong&gt;，不想被扣年终bonus的记住&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;http协议&#34;&gt;HTTP协议&lt;/h2&gt;

&lt;p&gt;基于&lt;code&gt;TCP&lt;/code&gt;和&lt;code&gt;IP&lt;/code&gt;两个协议：也称&lt;code&gt;TCP/IP&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;curl-命令&#34;&gt;&lt;code&gt;curl&lt;/code&gt; 命令&lt;/h2&gt;

&lt;h3 id=&#34;用-curl-可以发http请求&#34;&gt;用&lt;code&gt;curl&lt;/code&gt;可以发HTTP请求&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl https://xiedaimala.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -v http://baidu.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -s -v -- http://baidu.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;-v&lt;/code&gt;：verbose 啰嗦模式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;用Chrome（地址栏输入URL），得到网页，开始解析页面&lt;/p&gt;

&lt;p&gt;而用curl命令，只得到网页，不解析页面&lt;/p&gt;

&lt;p&gt;理解以下概念&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;会被&lt;code&gt;curl&lt;/code&gt;工具重写，先请求DNS获得IP&lt;/li&gt;
&lt;li&gt;先进行TCP连接，TCP连接成功后，开始发送HTTP请求&lt;/li&gt;
&lt;li&gt;请求内容看一眼&lt;/li&gt;
&lt;li&gt;相应内容看一眼&lt;/li&gt;
&lt;li&gt;响应结束后，关闭TCP连接（看不出来）&lt;/li&gt;
&lt;li&gt;真正结束&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;gt; &lt;code&gt;curl baidu.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt; 以下是返回的内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;html&amp;gt;
&amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot; content=&amp;quot;0;url=http://www.baidu.com/&amp;quot;&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;查看&lt;code&gt;curl&lt;/code&gt; 发送的五行请求&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;gt; &lt;code&gt;curl -v  http://baidu.com&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;*   Trying 180.101.49.12:80... #DNS询问IP地址
* TCP_NODELAY set
* Connected to baidu.com (180.101.49.12) port 80 (#0) # 链接服务器80端口
&amp;gt; GET / HTTP/1.1 #获取根路径 使用的协议
&amp;gt; Host: baidu.com #一个IP有可能对应多个域名，所以访问`180.101.49.12`所对应的的域名是`baidu.com`
&amp;gt; User-Agent: curl/7.67.0 #用户访问工具
&amp;gt; Accept: */* #期待返回的内容 任意内容
&amp;gt; # 回车表示请求结束，一共五行
* Mark bundle as not supporting multiuse
&amp;lt; HTTP/1.1 200 OK # 以`&amp;lt;`开头的就是服务器返回的内容
&amp;lt; Accept-Ranges: bytes
&amp;lt; Cache-Control: private, no-cache, no-store, proxy-revalidate, no-transform
&amp;lt; Connection: keep-alive
&amp;lt; Content-Length: 2381
&amp;lt; Content-Type: text/html
&amp;lt; Date: Mon, 20 Jan 2020 13:46:42 GMT
&amp;lt; Etag: &amp;quot;588604c8-94d&amp;quot;
&amp;lt; Last-Modified: Mon, 23 Jan 2017 13:27:36 GMT
&amp;lt; Pragma: no-cache
&amp;lt; Server: bfe/1.0.8.18
&amp;lt; Set-Cookie: BDORZ=27315; max-age=86400; domain=.baidu.com; path=/
&amp;lt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot; content=&amp;quot;0;url=http://www.baidu.com/&amp;quot;&amp;gt;
&amp;lt;/html&amp;gt;
* Connection #0 to host baidu.com left intact
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启用&lt;code&gt;baidu.com&lt;/code&gt;,请重新访问&lt;code&gt;http://www.baidu.com/&lt;/code&gt;，对应访问的IP改变，&lt;code&gt;TCP&lt;/code&gt;启动，连接到80端口，之后发送五行内容，得到&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;!--STATUS OK--&amp;gt;&amp;lt;html&amp;gt;...&amp;lt;/html&amp;gt;
* Connection #0 to host www.baidu.com left intact
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;只有TCP结束了，才真正结束&lt;/p&gt;

&lt;h3 id=&#34;http&#34;&gt;HTTP&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;规定请求的格式是什么，响应式格式是什么&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;HTTP规定如何写五行请求以及如何返回响应&lt;/p&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-27-11-33-39.pdf&#34;&gt;URL是什么.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-29-11-22-40.js%20%E6%9C%8D%E5%8A%A1%E5%99%A8.pdf&#34;&gt;HTTP 请求与响应 &amp;amp; Node.js 服务器.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://zhih.me/how-the-web-works/&#34;&gt;WEB是如何工作的 By底噪&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_31930499/article/details/79767330&#34;&gt;DNS的作用是什么？为什么一定要配置DNS才能上网&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/06/dns.html&#34;&gt;DNS 原理入门 作者：阮一峰&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【CSS非全解03】CSS基础-盒模型</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A303css%E5%9F%BA%E7%A1%80-%E7%9B%92%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 13 Jan 2020 00:27:37 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A303css%E5%9F%BA%E7%A1%80-%E7%9B%92%E6%A8%A1%E5%9E%8B/</guid>
      
        <description>

&lt;h2 id=&#34;两种盒模型&#34;&gt;两种盒模型&lt;/h2&gt;

&lt;h3 id=&#34;盒模型&#34;&gt;盒模型&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://output.jsbin.com/puyazix&#34;&gt;直观地感受下盒模型demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;content-box 内容盒：以内容为盒子的边界（宽高度）&lt;/li&gt;
&lt;li&gt;border-box 边框盒：以边框为盒子的边界（宽高度）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;请说一下盒模型&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;标准回答：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CSS 盒模型分两种：&lt;/p&gt;

&lt;p&gt;一种是content box，另一种是border box；&lt;/p&gt;

&lt;p&gt;区别是：&lt;/p&gt;

&lt;p&gt;content box的宽、高度只包含content；&lt;/p&gt;

&lt;p&gt;border box的宽、高度包含到border（以内），包括border、padding和content；&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;区别&#34;&gt;区别&lt;/h3&gt;

&lt;p&gt;只在设置了宽高后有区别&lt;/p&gt;

&lt;p&gt;content-box 是写了多少宽度，内容就是多少宽度，但是如果设置了padding、border和margin，整个加起来，不符合视觉习惯。&lt;/p&gt;

&lt;p&gt;border-box 为了符合视觉习惯，压缩了content的内容，除去margin以外的宽度，边框的最左边到最右边就是宽度，从而使得宽度迎合视觉习惯&lt;/p&gt;

&lt;h3 id=&#34;尺寸计算公式&#34;&gt;尺寸计算公式&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;在浏览器&lt;strong&gt;缩放比例&lt;/strong&gt;为&lt;code&gt;1&lt;/code&gt;的情况下，F12(Chrome)打开检查元素，查看开发者工具&amp;gt;Styles&lt;/p&gt;

&lt;p&gt;&lt;code&gt;content-box [width | height] = content&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border-box [width | height] = content + padding + border&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;很多人对盒模型有误解。把margin算进去的那是&lt;strong&gt;盒子占据的位置&lt;/strong&gt;，而不是&lt;strong&gt;盒子的大小&lt;/strong&gt;！&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;盒子的大小为&lt;code&gt;content+padding+border&lt;/code&gt;即内容的&lt;code&gt;(width)&lt;/code&gt;+内边距的再加上边框，而不加上&lt;code&gt;margin&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;content 二维 width和height；可见&lt;/p&gt;

&lt;p&gt;border、padding和margin 二维的&lt;code&gt;-top&lt;/code&gt;,&lt;code&gt;-bottmom&lt;/code&gt;, &lt;code&gt;-left&lt;/code&gt;,&lt;code&gt;-right&lt;/code&gt;；&lt;/p&gt;

&lt;p&gt;border可见,通过&lt;code&gt;border-&lt;/code&gt;, &lt;code&gt;border-style&lt;/code&gt;, &lt;code&gt;border-color&lt;/code&gt;属性&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border: [border-width ||border-style ||border-color |inherit]&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;padding和margin透明（无显现属性transparent elements），间接可见&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/linjiqin/p/3556497.html&#34;&gt;CSS padding margin border属性详解 by Ruthless&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;影响和盒子有关的其他内容&lt;/p&gt;

&lt;p&gt;mdn参考&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model&#34;&gt;CSS 基础框盒模型介绍 mdn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;假如框盒上设有背景（&lt;code&gt;background-color&lt;/code&gt; 或 &lt;code&gt;background-image&lt;/code&gt;），背景将会一直延伸至边框的外沿（默认为在边框下层延伸，边框会盖在背景上）。此默认表现可通过 CSS 属性 &lt;code&gt;background-clip&lt;/code&gt; 来改变。&lt;/p&gt;

&lt;p&gt;除&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element&#34;&gt;可替换元素&lt;/a&gt;外，对于行内元素来说，尽管内容周围存在内边距与边框，但其占用空间（每一行文字的高度）则由 &lt;code&gt;line-height&lt;/code&gt;属性决定，即使边框和内边距仍会显示在内容周围。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;哪个好用&#34;&gt;哪个好用&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;border-box 边框盒更好用，因为宽度不用考虑padding和border的影响，压缩点内容，要看，如果是处理文字，可以用text-overflow等来省略&lt;/p&gt;

&lt;p&gt;因为border-box的width会将padding和border包含在内，布局时更好控制，尤其是在响应式布局中。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有一篇墙推IE怪异盒模型的文章：&lt;a href=&#34;https://css-tricks.com/international-box-sizing-awareness-day/&#34;&gt;《把所有元素的box-sizing都设置成border-box吧！》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有一种推荐而且很常见的做法：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSS&#34;&gt;* {
    box-sizing:border-box;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;块级盒的默认宽度&#34;&gt;块级盒的默认宽度&lt;/h4&gt;

&lt;p&gt;如果未声明宽度，并且盒子是静态或者相对定位，有内容&lt;code&gt;content&lt;/code&gt;，宽度会保持 100％的 宽度，改变了&lt;code&gt;padding&lt;/code&gt; 和 &lt;code&gt;border&lt;/code&gt;的值不为0后， 块级盒会向内推动，而不是向外扩展。&lt;/p&gt;

&lt;p&gt;但是，如果明确设置盒子的宽度为 100％，那么 padding 就会向外延展。&lt;/p&gt;

&lt;p&gt;盒子的默认宽度并不真的是 100％&lt;/p&gt;

&lt;p&gt;而是&lt;strong&gt;剩下的可能值&lt;/strong&gt;(剩余真实存在的宽度)。&lt;/p&gt;

&lt;p&gt;很多情况下，盒子的默认宽度（剩余可能值）对于设置/不设置宽度都是非常有用&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/hnyei/archive/2011/09/29/2195935.html&#34;&gt;CSS盒模型详解+定位&lt;/a&gt;，翻的是&lt;a href=&#34;https://css-tricks.com/the-css-box-model/&#34;&gt;CSS Tricks: The CSS Box Model&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/FrankKai/FrankKai.github.io/issues/38&#34;&gt;你真的理解浏览器盒模型吗？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.kancloud.cn/dunizb/web-dev-marrow/647634&#34;&gt;前端精华总结&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://codepen.io/carolineartz/full/ogVXZj&#34;&gt;边框盒 VS 内容盒Demo&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;变态的margin合并&#34;&gt;变态的margin合并&lt;/h3&gt;

&lt;p&gt;margin不会影响盒子本身的大小，但是它会影响和盒子有关的其他内容，比如margin合并&lt;/p&gt;

&lt;h4 id=&#34;哪些情况会合并&#34;&gt;哪些情况会合并&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;上下合并，左右不合并，这样设计，方便写margin时不用再算除以2的问题，直接合并&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;父子margin合并（第一个子元素的上边距，最后一个子元素的下边距）&lt;/li&gt;
&lt;li&gt;兄弟间上下margin合并&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;如何阻止合并&#34;&gt;如何阻止合并&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;父子合并（内外block）：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;用&lt;code&gt;padding/border&lt;/code&gt;挡住合并&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;overflow:hidden&lt;/code&gt;挡住合并&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;display:flex&lt;/code&gt;，不知道为什么，别问我，文档规定&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;父子margin间存在padding或border，就加了阻隔，隔开父子margin，自然就不能合并了&lt;/p&gt;

&lt;p&gt;兄弟合并（上下block）：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;符合预期的&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;inline-block&lt;/code&gt;消除，margin分开计算不会合并&lt;/li&gt;
&lt;li&gt;CSS属性逐年增多，一条条死记&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;基本单位-https-www-zhangxinxu-com-wordpress-2011-03-css-css3-unit-units&#34;&gt;&lt;a href=&#34;https://www.zhangxinxu.com/wordpress/2011/03/css-css3-unit-units/&#34;&gt;基本单位&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&#34;长度单位&#34;&gt;长度单位&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;px&lt;/code&gt;像素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;em&lt;/code&gt;相对于自身&lt;code&gt;font-size&lt;/code&gt;的倍数&lt;code&gt;1,2,3,4em&lt;/code&gt;=&lt;code&gt;1x,2x,3x,4x font-size&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;百分数&lt;/li&gt;
&lt;li&gt;整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vw&lt;/code&gt; | &lt;code&gt;vh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其他，少，不用了解&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;颜色&#34;&gt;颜色&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;hsla(h, s, l, a): (30°, 100%, 100%, 0.5)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;rgba(r, g, b,a): (255, 127, 0,0.5)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;Hex triplet: #FF7F00&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;淘宝色&lt;code&gt;#FF6600&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;透明&lt;code&gt;transparent&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units&#34;&gt;CSS values and units mdn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/length#Relative_length_units&#34;&gt;CSS length mdn&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;自动填充背景色&lt;/p&gt;

&lt;p&gt;在body上添加一个颜色，外面也同样变成这个色，但并不意味着背景全是body，只有加了border，才能看出body的实际范围&lt;/p&gt;

&lt;p&gt;用border来确定body在哪&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;W3C 组织建议把所有网页上的对像都放在一个盒(box)中，设计师可以通过创建定义来控制这个盒的属性，这些对像包括段落、列表、标题、图片以及层。&lt;/p&gt;

&lt;p&gt;盒模型主要定义四个区域：内容(content)、边框距(padding)、边界(border)和边距(margin)。&lt;/p&gt;

&lt;p&gt;margin，background-color，background-image，padding，content，border之间的层次、关系和相互影响。&lt;/p&gt;

&lt;p&gt;用3D画一张box model层次图&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;margin：层的边框以外留的空白&lt;/li&gt;
&lt;li&gt;background-color：背景颜色&lt;/li&gt;
&lt;li&gt;background-image：背景图片&lt;/li&gt;
&lt;li&gt;padding：层的边框到层的内容之间的空白&lt;/li&gt;
&lt;li&gt;border：边框&lt;/li&gt;
&lt;li&gt;content：内容&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://codepen.io/xmasuhai/full/ExaLrpa&#34;&gt;用CSS实现彩虹&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-23-12-30-0.pdf&#34;&gt;CSS 基础概念.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/24778275&#34;&gt;CSS盒模型 定位扫盲&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000013069516&#34;&gt;CSS盒模型完整介绍JS，BFC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jayzangwill.github.io/blog/2016/12/15/CSS%20box%20model%20and%20location/#more&#34;&gt;盒模型 大小 定位&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/27839418&#34;&gt;对盒子模型，BFC，IFC和外边距合并等概念和问题的总结&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/8b8198095487&#34;&gt;深入理解CSS盒模型&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://caibaojian.com/fend_note/chapter1/04_04_box_model.html&#34;&gt;WEB前端开发 盒模型&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://leohxj.gitbooks.io/front-end-database/html-and-css-basic/box-module.html&#34;&gt;前端工程师手册 盒模型&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wanghan0.github.io/2017/03/31/css-box/&#34;&gt;谈谈我对盒模型的理解2017&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.nowcoder.com/questionTerminal/7f415325ccc344789093a70a54e4745b&#34;&gt;牛客 介绍一下CSS的盒子模型？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.w3.org/TR/CSS2/box.html&#34;&gt;8 Box model&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://zhanglun.xyz/2014/10/05/css%E7%9A%84%E7%9B%92%E6%A8%A1%E5%9E%8B%E5%9B%9E%E9%A1%BE/&#34;&gt;CSS的盒模型-过去和将来2014&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wanghan0.github.io/2017/04/24/css-center/&#34;&gt;CSS各种居中实现方式&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.learnlayout.com/toc.html&#34;&gt;学习CSS布局&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.learnlayout.com/box-sizing.html&#34;&gt;学习CSS布局 box-sizing&lt;/a&gt;&lt;/p&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【CSS非全解02】CSS基础-文档流</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A302css%E5%9F%BA%E7%A1%80-%E6%96%87%E6%A1%A3%E6%B5%81/</link>
      <pubDate>Wed, 08 Jan 2020 06:12:59 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A302css%E5%9F%BA%E7%A1%80-%E6%96%87%E6%A1%A3%E6%B5%81/</guid>
      
        <description>

&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Normal_Flow&#34;&gt;文档流 mdn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;块、内联、内联块？&lt;/li&gt;
&lt;li&gt;margin合并&lt;/li&gt;
&lt;li&gt;两种盒模型&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;文档流-normal-flow&#34;&gt;文档流 Normal Flow&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flow_Layout&#34;&gt;流式布局 mdn&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;文档流动方向&#34;&gt;文档流动方向&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;从左到右：&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span&#34;&gt;内联元素像默认的&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/a&gt; 直到排满一行，才会另起一行&lt;/li&gt;
&lt;li&gt;从上到下：&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div&#34;&gt;块级元素像默认的&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/a&gt; 每一个元素占据一行，不并排（注意不加任何样式为前提下）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://xmasuhai.xyz/demo-test/css-demo-1/css-demo_system.html&#34;&gt;css-demo-1 with CSS animation &amp;amp; SCSS&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;内联元素占满一行，空间不够时，折行，即拦腰折断显示到下一行&lt;/p&gt;

&lt;p&gt;块级元素就算设置了宽度不占满，也不会合成一行，即不并排，除非设置定位属性：默认情况下，每个块级元素独占一行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;文档流小结&#34;&gt;文档流小结&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;流动方向

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inline&lt;/code&gt;元素从左到右，到达最右边才会换行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;block&lt;/code&gt;元素从上到下，每一个都会另起一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inline-block&lt;/code&gt;也是从左到右&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;宽度

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inline&lt;/code&gt;宽度为所有内部内联元素的宽度，一般即文字宽度的和所决定，指定&lt;code&gt;width&lt;/code&gt;无效&lt;/li&gt;
&lt;li&gt;&lt;code&gt;block&lt;/code&gt;默认自动计算宽度&lt;code&gt;width:auto;&lt;/code&gt;，指能有多宽就占多宽，&lt;strong&gt;尽量得宽&lt;/strong&gt;，并不一定是&lt;code&gt;100%&lt;/code&gt;，可用&lt;code&gt;width&lt;/code&gt;指定，指定了也不会换行，除非有其他非默认属性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inline-block&lt;/code&gt;结合前两者部分特点，默认宽度和&lt;code&gt;inline&lt;/code&gt;相同，&lt;strong&gt;尽量得窄&lt;/strong&gt;，紧密包裹里面的内容，但可设置&lt;code&gt;width&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;高度

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inline&lt;/code&gt;高度由&lt;code&gt;inline-height&lt;/code&gt;间接确定，跟它的&lt;code&gt;height&lt;/code&gt;或者&lt;code&gt;padding&lt;/code&gt;无关&lt;/li&gt;
&lt;li&gt;&lt;code&gt;block&lt;/code&gt;高度由所有内部正常文档流中的元素高度之和决定，全部包裹住，可以设&lt;code&gt;height&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inline-block&lt;/code&gt;和&lt;code&gt;block&lt;/code&gt;类似，可以设置&lt;code&gt;height&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;这里&lt;code&gt;内联/行内 | 块级 | 行盒 元素&lt;/code&gt;指的是 &lt;code&gt;display：[inline | block | inline-block]&lt;/code&gt;的元素，因为HTML5标准不分块级、内联级，只分浏览器的默认属性，可以随时切换&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://xmasuhai.xyz/post/html/html%E5%85%A8%E8%A7%A35html%E5%85%A5%E9%97%A8-%E4%B8%8D%E8%83%BD%E8%BF%99%E4%B9%88%E5%86%99%E6%88%91%E4%B8%8D%E9%80%A0/&#34;&gt;&lt;strong&gt;永远不要在inline元素里写block元素&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;永远不要写&lt;code&gt;width:100%;&lt;/code&gt;&lt;/strong&gt;，除非特殊说明&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;默认&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;的高度是由谁决定的？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://xmasuhai.xyz/demo-test/css-demo-1/css-demo_flow.html&#34;&gt;css-demo_flow with CSS animation &amp;amp; SCSS&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;demo里默认&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;既不接受宽度，也不接受高度；&lt;/li&gt;
&lt;li&gt;包裹它的&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;并没有被&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;设置的&lt;code&gt;padding&lt;/code&gt;撑开，而&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;的高度由其里面的元素决定，包裹住其中的元素；&lt;/li&gt;
&lt;li&gt;加了内边距的&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;被撑高的只是&lt;strong&gt;可视高度&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inline&lt;/code&gt;元素的&lt;strong&gt;实际高度&lt;/strong&gt;是由&lt;strong&gt;行高&lt;code&gt;line-height&lt;/code&gt;间接确定的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;包裹它的&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;被内部元素的实际高度撑开，行高会继承，写在div后也一样&lt;/li&gt;
&lt;li&gt;间接？还受到不同字体的影响，请看行盒模型&lt;a href=&#34;https://zhuanlan.zhihu.com/p/25808995&#34;&gt;深入理解CSS:字体度量&amp;hellip;by方应杭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;脱离文档流元素不计算入父元素的高度， 具体&lt;a href=&#34;[https://xxx/](https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context)&#34;&gt;看层叠上下文 mdn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;属性-overflow-溢出&#34;&gt;属性&lt;code&gt;overflow&lt;/code&gt;溢出&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;当内容&lt;code&gt;content&lt;/code&gt;大于容器&lt;code&gt;box&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;等内容的宽度或高度大于容器的，会溢出&lt;/li&gt;
&lt;li&gt;可用&lt;code&gt;overflow&lt;/code&gt;来设置是否显示滚动条&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auto&lt;/code&gt;：灵活设置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scroll&lt;/code&gt;：永远显示，太丑，多出的像素会影响布局，不用，在cssReset里干掉&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hidden&lt;/code&gt;：直接隐藏溢出部分&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visible&lt;/code&gt;：直接显示溢出部分&lt;/li&gt;
&lt;li&gt;&lt;code&gt;overflow&lt;/code&gt;可以分为&lt;code&gt;overflow-x&lt;/code&gt;和&lt;code&gt;overflow-y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;脱离文档流-mdn-https-developer-mozilla-org-zh-cn-docs-web-css-overflow&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/overflow&#34;&gt;脱离文档流 mdn&lt;/a&gt;&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;超出的内容&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;visible 可见&lt;/li&gt;
&lt;li&gt;hidden 不给看&lt;/li&gt;
&lt;li&gt;scroll 可滚（太丑 高度不超过也显示滚动条）&lt;/li&gt;
&lt;li&gt;auto 超出部分，自动显示滚动条&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;里面什么也没有，即高度为0px，里面没有文档流元素&lt;/p&gt;

&lt;p&gt;而&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;里面什么也没有时，加了border，看出高度是由&lt;code&gt;line-height&lt;/code&gt;决定的&lt;/p&gt;

&lt;p&gt;指定除visible(默认值)以外的值将创建一个新的 块级格式化上下文.&lt;/p&gt;

&lt;p&gt;为使overflow有效果，块级容器必须有一个指定的高度（height或者max-height）或者将white-space设置为nowrap。&lt;/p&gt;

&lt;p&gt;注意:  设置一个轴为visible（默认值），同时设置另一个轴为不同的值，会导致设置visible的轴的行为会变成auto。&lt;/p&gt;

&lt;p&gt;注意: 即使将overflow设置为hidden，也可以使用JavaScript Element.scrollTop 属性来滚动HTML元素。&lt;/p&gt;

&lt;p&gt;如果有滚动条，那么里面的元素默认只在第一屏显示，后面留空&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://xmasuhai.xyz/demo-test/css-demo-1/css-demo_overflow.html&#34;&gt;css-demo-overflow with SCSS&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;让一个元素脱离文档流&#34;&gt;让一个元素脱离文档流&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;回忆一下&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;block&lt;/code&gt;高度由内部文档流元素决定，可以设&lt;code&gt;height&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;有些元素可以不在文档流中，放飞自我&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;哪些元素脱离文档流
如何让一个元素脱离文档流？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;内联元素的高度是由行高决定的&amp;ndash;&amp;gt;确定了行高的文字内容形成文档流元素&amp;ndash;&amp;gt;决定了其外部块级元素的高度&amp;ndash;&amp;gt;高度撑开其外部的块级元素&lt;/p&gt;

&lt;p&gt;现在让文字即其内联元素脱离文档流&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;加属性&lt;code&gt;float&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;加属性&lt;code&gt;position:absolute |  fixed;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;怎么让元素不脱离文档流&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;不要用以上提到的属性&lt;/li&gt;
&lt;li&gt;一个元素脱离文档流，就不影响块级父元素的高度，换句话说父容器计算高度时就不把它计算在内了&lt;/li&gt;
&lt;li&gt;以后会学清除浮动，但一旦脱离文档流，就回不去了&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;块-内联-内联块-过时的概念&#34;&gt;块、内联、内联块？过时的概念&lt;/h3&gt;

&lt;h4 id=&#34;元素的默认level&#34;&gt;元素的默认level&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;内联/行内 | 块级 | 行盒 元素&lt;/code&gt;指的是 &lt;code&gt;display：[inline | block | inline-block]&lt;/code&gt;的元素，因为HTML5标准不分块级、内联级，只分浏览器的默认属性，可以随时切换，&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Block-level_elements#%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E4%B8%8E%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0&#34;&gt;块级元素与行内元素 mdn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;默认是block-level box的元素&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;默认是in-line-level box的元素&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;通过&lt;code&gt;display:[inline | block | inline-block|];&lt;/code&gt;来随时切换&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;inline-block&lt;/code&gt;在文档流上很像&lt;code&gt;inline&lt;/code&gt;，但是不会跨两行显示&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;flow-layout-and-overflow-流布局和溢出-https-developer-mozilla-org-zh-cn-docs-web-css-css-flow-layout-flow-layout-and-overflow&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flow_Layout/Flow_Layout_and_Overflow&#34;&gt;Flow Layout and Overflow 流布局和溢出&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;块级元素设置的高度比内容矮时，内容溢出边框&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;margin合并-死记硬背&#34;&gt;margin合并（死记硬背）&lt;/h3&gt;

&lt;h3 id=&#34;两种盒模型-border-box更符合人类思维-直觉&#34;&gt;两种盒模型（border-box更符合人类思维、直觉）&lt;/h3&gt;

&lt;p&gt;更符合人类思维、直觉&lt;/p&gt;

&lt;p&gt;eg.
第三视角&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CSS不是重点，面向工作学习市场上比较需要的技术才是王道，张*旭的职业发展不适大多数人，选择比努力更重要&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-23-12-30-0.pdf&#34;&gt;CSS 基础概念.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Git入门7】Git远程仓库   GitHub常用操作流程3_下载</title>
      <link>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A87git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-github%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B3_%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Tue, 07 Jan 2020 21:36:30 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A87git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-github%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B3_%E4%B8%8B%E8%BD%BD/</guid>
      
        <description>

&lt;h3 id=&#34;下载别人的代码&#34;&gt;下载别人的代码&lt;/h3&gt;

&lt;h4 id=&#34;1-方法&#34;&gt;1. 方法&lt;/h4&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 如果是自己的机子，用SSH链接下载，&lt;code&gt;git clone git@xxxx[目标路径]&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 如果是不同机子，要上传新的SSH key（一机一key)&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 许多场景都是机子未和别人的账号绑定,只能用HTTPS链接:&lt;code&gt;git clone https://github.com/xxxx/***.git&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 自己不同的机子，对应相同的GitHub账号&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; cd 目标路径！！！&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git add &amp;amp;&amp;amp; git commit &amp;amp;&amp;amp; [git pull]（同事改过代码）&amp;amp;&amp;amp; git push四联操作&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-步骤&#34;&gt;2. 步骤&lt;/h4&gt;

&lt;p&gt;第1步：复制SSH key/HTTPS链接地址&lt;/p&gt;

&lt;p&gt;第2步：&lt;code&gt;cd [目标路径父目录]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;第3步：&lt;code&gt;git clone git@xxxx.git [目标路径]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;第4步：&lt;code&gt;cd [目标路径]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;第5步：完成&lt;/p&gt;

&lt;h4 id=&#34;3-如何下载某个分支&#34;&gt;3. 如何下载某个分支&lt;/h4&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;cd [目标路径父目录]&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 每次先下载整个仓库，然后&lt;code&gt;git checkout xxx #xxx分支名（如果有的话）&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; or 搜 &lt;a href=&#34;https://stackoverflow.com/questions/1778088/how-do-i-clone-a-single-branch-in-git/7034921#7034921&#34;&gt;难记的命令&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-git-clone-的三种变形&#34;&gt;4. &lt;code&gt;git clone&lt;/code&gt;的三种变形&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone git@?/xxx1.git&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 会在当前目录下创建一个叫xxx1的目录&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;xxx1/.git&lt;/code&gt;是本地仓库&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 马上接一句&lt;code&gt;cd xxx1&lt;/code&gt;，要形成条件反射&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone git@?/xxx2.git yyy1&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 重命名目录：在本地新建yyy1目录&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 马上接一句 &lt;code&gt;cd yyy1&lt;/code&gt;，要形成条件反射&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone git@?/xxx3.git .&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 新建 xxx&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 马上接一句&lt;code&gt;cd xxx&lt;/code&gt;，要形成条件反射&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 最后一个字符是点，注意有空格&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 不会小建目录，使用当前目录容纳代码和.git&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 当前目录一开始最好是个空目录，不然后果自负&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;clone 之后马上接cd&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;5-git-pull-冲突了怎办&#34;&gt;5. &lt;code&gt;git pull&lt;/code&gt; 冲突了怎办&lt;/h4&gt;

&lt;p&gt;和解决&lt;code&gt;git merge&lt;/code&gt;冲突一样：&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;发现冲突&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 合并分支时 ，会得到CONFLICT提示&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 使用&lt;code&gt;git status -sb&lt;/code&gt;查看哪个/哪些文件冲突了&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UU&lt;/code&gt; 表示两边都改了&lt;/li&gt;
&lt;li&gt;-s表示summary -b表示brunch&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;解决冲突&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 依次打开每个文件&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 搜索====&lt;strong&gt;四个等于号&lt;/strong&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 在上下两个部分中选择要保留的代码，只选上面/只选下面/都保留&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 删除不用的代码&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 删除==== &amp;lt;&amp;lt;&amp;lt;&amp;lt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;这些标记&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;strong&gt;&lt;code&gt;git add&lt;/code&gt;暂存对应的文件&lt;/strong&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 再次 git status -sb，解决下一个文件的冲突&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 直到没有冲突，&lt;strong&gt;运行&lt;code&gt;git commit&lt;/code&gt;（注意不需要选项，自动添加fix conflict）&lt;/strong&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;6-总结&#34;&gt;6. 总结&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;自己的代码：用SSH链接下载&lt;/li&gt;
&lt;li&gt;别人的代码：用HTTPS链接下载&lt;/li&gt;
&lt;li&gt;5个步骤&lt;/li&gt;
&lt;li&gt;只需要两句话&lt;/li&gt;
&lt;/ol&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git remote add repo2 git@xxx&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git push -u repo2 master&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;如果提示&lt;code&gt;git pull...&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 说明新建项目时，在远程仓库创建了一些你本地仓库没有的文件&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 只需要运行&lt;code&gt;git pull&lt;/code&gt;之后，再运行刚才的命令（&lt;code&gt;git push -u 仓库名 分支名&lt;/code&gt; 即可）&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;下载分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt; 三种变形&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;大总结&#34;&gt;大总结&lt;/h3&gt;

&lt;h4 id=&#34;常用命令&#34;&gt;常用命令&lt;/h4&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 大部分时候，只需要用到 &lt;code&gt;git clone &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; git push&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 遇到报错，翻译，查原因&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;远程仓库&#34;&gt;远程仓库&lt;/h4&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 只是本地仓库的备份，所以变化都要先commit到本地仓库，然后push到远程&lt;/label&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 不下载部分代码，只clone整个仓库&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 类似我要查看在哪个分支分支，用:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 我要查看在哪个远程仓库，用：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote # -v
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://www.google.com/search?sxsrf=ACYBGNT3nzzp-4UUv6olhs19dX9xhbhOTQ%3A1575821490674&amp;amp;source=hp&amp;amp;ei=siDtXe33JY3l-AbSm6-QDQ&amp;amp;q=github+%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93&amp;amp;oq=github+%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93&amp;amp;gs_l=psy-ab.3...1944.24432..25638...2.0..0.101.1131.11j2......0....2j1..gws-wiz.....10..35i362i39j0.GAX7DrVupEM&amp;amp;ved=0ahUKEwjtmLbBuKbmAhWNMt4KHdLNC9IQ4dUDCAk&amp;amp;uact=5&#34;&gt;需要谨慎操作的：GitHub 删除一个远程仓库&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Git入门6】Git远程仓库   GitHub常用操作流程2_上传</title>
      <link>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A86git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-github%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B2_%E4%B8%8A%E4%BC%A0/</link>
      <pubDate>Mon, 06 Jan 2020 21:50:47 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A86git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-github%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B2_%E4%B8%8A%E4%BC%A0/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;设置了公钥，就能上传和下载了&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过 &lt;code&gt;git pull&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;git push&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;git clone&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;1-两行命令&#34;&gt;1. 两行命令&lt;/h4&gt;

&lt;p&gt;第0步 准备工作&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;新建GitHub Repo(Repositories),任意Repository name&lt;/li&gt;
&lt;li&gt;在快速设置中，默认SSH(勿选HTTPS，坑，每次要输密码，不方便，骂死你)&lt;/li&gt;
&lt;li&gt;复制页面里的代码（关掉翻译）
「复制SSH 地址（注意是以git开头的而不是HTTPS地址）」&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;已有本地仓库&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add origin git@github.com:yourName/yourRepoName.git
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;告诉本地仓库，对应到远程仓库的地址，仓库名是origin&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;第1步 第一次上传：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u upstream&lt;/code&gt; 第一次上传时，记下本次匹配，推到origin仓库的master分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u origin master&lt;/code&gt;只有第一次需要写，以后直接&lt;code&gt;git push&lt;/code&gt;就好了&lt;/li&gt;
&lt;li&gt;master（本地）-&amp;gt;master（GitHub）&lt;/li&gt;
&lt;li&gt;刷新远程仓库页面就可以看到上传的内容了&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;没有本地仓库，完全新建时&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;# RepoName&amp;quot; &amp;gt;&amp;gt; README.md
git init
git add README.md
git commit -m &amp;quot;first commit&amp;quot;
git remote add origin git@github.com:yourName/yourRepo Name.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git push&lt;/code&gt; 上传的是本地仓库提交过的一个分支，并不是当前看到的代码&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以提交多个分支：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch x
git checkout x
## ... change sth ...
git add .
git commit -am &amp;quot;log&amp;quot;
git push -u origin x
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;注意要加-u，因为是第一次上传此分支* [new branch]&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;x（本地）-&amp;gt;x（GitHub）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;类似我要查看分支:&lt;code&gt;git branch&lt;/code&gt;，我要查看远程仓库：&lt;code&gt;git remote&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;小结&#34;&gt;小结&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关联你新建的远程仓库&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add origin git@xxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 在本地添加远程仓库的地址&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; origin是远程仓库的默认名字，可以换，不建议换&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 勿使用&lt;code&gt;https://&lt;/code&gt;地址，每次要输密码烦&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;初始提交到远程仓库&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 推送本地master分支到远程origin的master分支&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;strong&gt;如果由于手贱，在创建远程仓库时加了README.md等原因，导致远程仓和你本地仓文件不一致，提示你应该git pull&amp;hellip;，就git pull一下&lt;/strong&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git pull&lt;/code&gt;是先把远程分支合并到本地对应的分支&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 如果远程分支没有（被其他人）更新过，才可以省略&lt;code&gt;git pull&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;-u origin master&lt;/code&gt; 的意思是设置上游分支&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 之后就可以不用设置直接&lt;code&gt;git pull&lt;/code&gt;;&lt;code&gt;git push&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg.
&lt;strong&gt;比如有个repo2仓库&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add repo2 gti@github.com:yourName/git-demo-02.git
git push -u repo2 master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不可直接&lt;code&gt;git pull&lt;/code&gt;，默认去origin仓库;被![reject]，这时需要将repo2仓库的master分支复制到当前的master 分支：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout master
git pull repo2 master:master
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;master -&amp;gt; repo2/master&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u repo2 master
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;被拒绝合并，因为没有关联，可以谨慎使用强制合并：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u repo2 master -f
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;小心同事打你&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;如何上传其他分支&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[x] 方法一：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin x:x
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git push&lt;/code&gt; 仓库名 分支名(源头：本地x):分支名（目标：远程x）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[x] 方法二：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout x
git push -u origin x
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git push&lt;/code&gt; 仓库名 分支名&lt;/li&gt;
&lt;li&gt;GitHub远程仓库是本地仓库（分支）的一个拷贝而已（备份.git/）&lt;/li&gt;
&lt;li&gt;本地仓库在硬盘里的位置（相对路径）不影响远程仓库&lt;/li&gt;

&lt;li&gt;&lt;p&gt;远程的Repo(Repositories)相当于在GitHub上的一个文件夹，git clone 下来的文件夹名就是Repo的名称&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;类似我要查看分支:&lt;code&gt;git branch&lt;/code&gt;，我要查看远程仓库：&lt;code&gt;git remote&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;区分origin和远程仓库的名称：&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/27712995&#34;&gt;GitHub 里面的 origin 到底代表啥意思&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://stackoom.com/question/2cxSb/git命令中-origin-和-remote-有什么区别-重复&#34;&gt;git命令中&amp;rsquo;origin&amp;rsquo;和&amp;rsquo;remote&amp;rsquo;有什么区别？&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/xuyaowen/p/git-origin.html&#34;&gt;git 的 origin 的含义&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-10-15-17-35.pdf&#34;&gt;git 远程仓库.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【CSS非全解01】CSS基础-体系化学CSS？</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A301css%E5%9F%BA%E7%A1%80-%E4%BD%93%E7%B3%BB%E5%8C%96%E5%AD%A6css/</link>
      <pubDate>Sat, 04 Jan 2020 23:02:28 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A301css%E5%9F%BA%E7%A1%80-%E4%BD%93%E7%B3%BB%E5%8C%96%E5%AD%A6css/</guid>
      
        <description>

&lt;h2 id=&#34;大纲&#34;&gt;大纲&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;基础部分学习占比：&lt;code&gt;HTML 1%&lt;/code&gt; &lt;code&gt;CSS 19%&lt;/code&gt; &lt;code&gt;Javascript 80%&lt;/code&gt; (&lt;code&gt;基础部分 ？%&lt;/code&gt; &lt;code&gt;HTTP等WEB知识 ?%&lt;/code&gt; &lt;code&gt;前端工具 ？%&lt;/code&gt; &lt;code&gt;框架 ?%&lt;/code&gt; &lt;code&gt;项目 ?%&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/People/howcome/p/cascade.html&#34;&gt;CSS历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://acid3.acidtests.org/&#34;&gt;Acid Test for browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS是艺术（非逻辑，用测试经验来学，空间感，所见即所学）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/Style/CSS/specs.en.html&#34;&gt;CSS版本&lt;/a&gt;（CSS4*3*2.1 分模块升级 模块版本level 搜 &lt;strong&gt;css spec&lt;/strong&gt; ）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference&#34;&gt;体系化学习？CSS mdn参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;文档流（Normal Flow）&lt;/li&gt;
&lt;li&gt;盒模型（[Content | Border] Box）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;xx层叠&lt;/strong&gt;？样式表（进行样式声明）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;样式重叠（多次对同一选择器）&lt;/li&gt;
&lt;li&gt;选择器重叠（用不同选择器对同一元素）&lt;/li&gt;
&lt;li&gt;文件重叠（多个文件）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;样式层叠覆盖，CSS极度灵活（不正交 属性、样式不一一对应确定）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;浏览器相关的几个网站(&lt;a href=&#34;https://caniuse.com/&#34;&gt;兼容性caniuse.com&lt;/a&gt; | &lt;a href=&#34;https://tongji.baidu.com/research/site?hmsr=%E7%BB%9F%E8%AE%A1footer%E9%93%BE%E6%8E%A5&amp;amp;hmpl=footer&amp;amp;hmcu=footer&amp;amp;hmkw=&amp;amp;hmci=footer&#34;&gt;市场份额tongji.baidu.com&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;浏览器内核(&lt;a href=&#34;https://csstriggers.com/&#34;&gt;csstriggers.com&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;浏览器业界毒瘤（QQ、百度），扛把子UC，新星夸克&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CanIUse 看数据时不用翻译，看注释时用&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Edge 对 calc() within grid 支持不好&lt;/li&gt;
&lt;li&gt;Safari 仍然不支持intrinsic and extrinsic sizing with grid 的属性 grid-template-rows&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/%E6%BC%94%E7%A4%BA%E8%AF%B4%E6%98%8E#CSS&#34;&gt;开源 Web 技术示例#CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;体系化学css-若不自-也可成功&#34;&gt;体系化学CSS？若不自*，也可成功&lt;/h2&gt;

&lt;p&gt;google &lt;a href=&#34;https://www.google.com/search?q=css+spec&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=css+spec&amp;amp;aqs=chrome..69i57j0l7.395j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;css spec&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/&#34;&gt;mdn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;TL,DR
在CSS新知识到来的时候，马上学会&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;写css必须学会先&#34;&gt;写CSS必须学会先&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;语法（写代码）&lt;/li&gt;
&lt;li&gt;调试（哪写错）&lt;/li&gt;
&lt;li&gt;查资料（为了抄）&lt;/li&gt;
&lt;li&gt;标准制定者&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CRM学习法之外的在线临时调试&lt;code&gt;playground&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://codesandbox.io/dashboard/recent&#34;&gt;&lt;code&gt;codesandbox&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://codepen.io/pen/&#34;&gt;&lt;code&gt;codepen&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;http://js.jirengu.com/?html,css,output&#34;&gt;&lt;code&gt;JSBin&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;https://jsfiddle.net/&#34;&gt;&lt;code&gt;jsFiddle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;css语法一-样式语法&#34;&gt;CSS语法一：样式语法&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSS&#34;&gt;selectors-list {
  properties-list
}

选择器{
    属性名:属性值;
    /* 只有注释 */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;selectors-list ::=
    selector[:pseudo-class] [::pseudo-element]
    [, selectors-list]&lt;/p&gt;

&lt;p&gt;properties-list ::=
    [property : value] [; properties-list]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;eg.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSS&#34;&gt;.a,
#b,
[c=&amp;quot;d&amp;quot;]&amp;gt;e f,
g+h,
i~j{
    border:1px red solid;
}
strong {
  color: red;
}
div.menu-bar li:hover &amp;gt; ul {
  display: block;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;注意事项&#34;&gt;注意事项&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;所有符号都是英文符号，IDE只开英语输入，中文从记事本里粘贴进来（开不同应用不同输入法：both Win &amp;amp; Mac）；标点写错，浏览器会警告，但不报错&lt;/li&gt;
&lt;li&gt;区分大小写，a 和 A 不同&lt;/li&gt;
&lt;li&gt;没有//注释，只是把选择器拼错不生效而已&lt;/li&gt;
&lt;li&gt;最后一个分号建议不要省略&lt;/li&gt;
&lt;li&gt;任何地方写错了，都不报错，浏览器会直接忽略，继续渲染，只给警告⚠️&lt;/li&gt;
&lt;li&gt;怎么纠错？调试看下文&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;注意，规则定义中的任何CSS语法错误都将使整个规则无效。无效的规则将被浏览器忽略。&lt;/p&gt;

&lt;p&gt;注意CSS定义完全是基于文本(ASCII)的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;eg.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSS&#34;&gt;p{
    /* 正确 */
    color:red;
    /* 不正规的“注释”：拼错 */
    xcolor:red;
    //color:red;
    /* 注释 */
    /* color:red; */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;css语法二-常用-语法&#34;&gt;CSS语法二：常用@语法&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSS&#34;&gt;@charset &amp;quot;UTF-8&amp;quot;; /* 必须放在第一行；必须以分号`;`结尾 */
@import url(2.css); /* 导入另一个CSS文件；必须以分号`;`结尾 */
@media (min-width:100px) and (max-width:200px){
    /* 语法一：样式语法 */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;注意事项2&#34;&gt;注意事项2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@charset&lt;/code&gt;必须放在第一行，解析中文字符&lt;/li&gt;
&lt;li&gt;前两个@语法必须以分号&lt;code&gt;;&lt;/code&gt;结尾&lt;/li&gt;
&lt;li&gt;@media 单独学&lt;/li&gt;
&lt;li&gt;charset字面是字符集的意思，UTF-8是字符编码 encodeing，历史遗留问题&lt;/li&gt;
&lt;li&gt;encodeing ∈ charset&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;问：charset 指什么？；答：指文件编码（而不是字符集）。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;调试css&#34;&gt;调试CSS&lt;/h3&gt;

&lt;h4 id=&#34;方法&#34;&gt;方法&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;使用&lt;a href=&#34;https://jigsaw.w3.org/css-validator/#validate_by_input&#34;&gt;W3C验证器&lt;/a&gt;（命令行工具），麻烦 不用&lt;/li&gt;
&lt;li&gt;VSCode看颜色（semi-colon）大概的位置，不精确，不智能&lt;/li&gt;
&lt;li&gt;WebStorm看颜色 （精确定位错误；智能提示）&lt;/li&gt;
&lt;li&gt;开发者工具看警告&lt;/li&gt;
&lt;li&gt;&lt;code&gt;css xxx generator&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;eg. google &lt;code&gt;css gradient generator&lt;/code&gt; &lt;code&gt;css shadowbox generator&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;浏览器开发者工具的使用步骤&#34;&gt;浏览器开发者工具的使用步骤&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用指针找到元素&lt;/li&gt;
&lt;li&gt;看它是否有选择器&lt;/li&gt;
&lt;li&gt;看它的样式是否被划掉（⚠️黄色三角警告 + &lt;del&gt;删除线&lt;/del&gt; +  提示非法值 invalid property value ）&lt;/li&gt;
&lt;li&gt;被其他样式覆盖或写错&lt;/li&gt;
&lt;li&gt;看它的样式是否有警告&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;border调试法&#34;&gt;Border调试法&lt;/h4&gt;

&lt;h5 id=&#34;步骤&#34;&gt;步骤&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;定位某个元素有问题&lt;/li&gt;
&lt;li&gt;给这个元素加border&lt;/li&gt;
&lt;li&gt;border没出现？选择器或语法错了，拼错&lt;/li&gt;
&lt;li&gt;border出现了，看看边界是否符合预期&lt;/li&gt;
&lt;li&gt;bug解决了才可以吧border 删掉&lt;/li&gt;
&lt;li&gt;逐行移动&lt;code&gt;border:1px solid red;&lt;/code&gt;看选择器是否生效；属性匹配到哪个属性了；具体哪个属性失效；&lt;/li&gt;
&lt;li&gt;加到VScode 等IDE的snnipets里，每次省个几秒：&lt;code&gt;border大法好，用border得永生，现已加入snippets豪华套餐&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;好像和&lt;a href=&#34;https://docs.emmet.io/cheat-sheet/&#34;&gt;Emmet&lt;/a&gt;想到一块去了：&lt;code&gt;emmmet bd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其实如果学了SCSS的&lt;code&gt;@mixin&lt;/code&gt;的话&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;注意&#34;&gt;注意&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;CSS的border调试法就相当于JS的log调试法&lt;/li&gt;
&lt;li&gt;请重复使用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;你可以在开发者工具里样式上加一段：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSS&#34;&gt;*{
    border:1px solid red;!important
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看看终极border大法显示页面布局&lt;/p&gt;

&lt;h3 id=&#34;常见错误&#34;&gt;常见错误&lt;/h3&gt;

&lt;h4 id=&#34;低级错误&#34;&gt;低级错误&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;拼写错误（选择器、属性名、属性值）&lt;/li&gt;
&lt;li&gt;大小写&lt;/li&gt;
&lt;li&gt;漏掉分号&lt;/li&gt;
&lt;li&gt;非英文符号&lt;/li&gt;
&lt;li&gt;反花括号漏掉&lt;/li&gt;
&lt;li&gt;没写单位&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;排除错误：推理，把正确可能性排除，剩下的无论看起来多对，肯定有错&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;非低级错误&#34;&gt;非低级错误&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;没有&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;查资料&#34;&gt;查资料&lt;/h3&gt;

&lt;h4 id=&#34;网站&#34;&gt;网站&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/search?q=mdn&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=mdn&amp;amp;aqs=chrome..69i57j0j69i61l3j69i65l3.703j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;google &lt;code&gt;关键词 + mdn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&#34;&gt;google &lt;code&gt;关键词 + CSS tricks&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/search?q=%E5%BC%A0%E9%91%AB%E6%97%AD&amp;amp;rlz=1C5CHFA_enJP765JP765&amp;amp;oq=%E5%BC%A0%E9%91%AB%E6%97%AD&amp;amp;aqs=chrome..69i57j0l4j69i61l2.16802j0j8&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;google &lt;code&gt;关键词 + 张鑫旭&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;书籍&#34;&gt;书籍&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;不推荐，以练习为主&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;搜练习素材-注意版权及商用法律风险&#34;&gt;搜练习素材（注意版权及商用法律风险）&lt;/h3&gt;

&lt;h4 id=&#34;psd&#34;&gt;PSD&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freepik.com/search?query=web&amp;amp;type=psd&#34;&gt;Freepik 搜PSD web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cn.365psd.com/free-psd/ui-kits&#34;&gt;365PSD 搜UI套件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;效果图-可能不提供下载-肉眼-或工具扒&#34;&gt;效果图（可能不提供下载，肉眼，或工具扒）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tympanus.net/codrops/&#34;&gt;codrops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codepen.io/&#34;&gt;codepen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dribbble.com&#34;&gt;dribbble搜web&lt;/a&gt; 顶级设计社区&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;仿商业网站-排名按喜好-分-先-后&#34;&gt;仿商业网站(排名按喜好&amp;gt;分&amp;gt;先&amp;gt;后)&lt;/h4&gt;

&lt;p&gt;hobby:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gcores.com&#34;&gt;机核&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.dgtle.com&#34;&gt;数字尾巴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sspai.com&#34;&gt;少数派&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ximalaya.com&#34;&gt;喜马拉雅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com&#34;&gt;哔站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;tech blog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://xiedaimala.com/bbs/topics&#34;&gt;河码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.im/user/59abfad26fb9a0248f4aa221&#34;&gt;掘金&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com&#34;&gt;思否&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com&#34;&gt;简书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;勿沉迷临摹&#34;&gt;勿沉迷临摹&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;每个类型临摹一两个即可&lt;/li&gt;
&lt;li&gt;PC站、移动端、UI套件&lt;/li&gt;
&lt;li&gt;再多无益&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;WB不超过一年半，don&amp;rsquo;t repeat yrself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;css标准制定者-你爵士和耐先生&#34;&gt;CSS标准制定者：你爵士和耐先生&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/Style/CSS/specs.en.html&#34;&gt;W3C&lt;/a&gt;：搜&lt;code&gt;CSS spec&lt;/code&gt;，看CSS最新标准，字典级文档，TL,DR&lt;/li&gt;
&lt;li&gt;可以看 &lt;a href=&#34;http://www.ayqy.net/doc/css2-1/cover.html&#34;&gt;CSS2.1标准的中文版&lt;/a&gt; 运用最广泛的应用标准-&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;规范是你遇到问题用来查的——字典级文档&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;开始crm学习法&#34;&gt;开始CRM学习法&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;抄-运行-改&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;快速上手scss-https-xiedaimala-com-tasks-42e05a0e-9233-4097-addd-43e61244be06-video-tutorials-1a2a0d76-c4ea-4f50-9ca9-a77c92db39dc&#34;&gt;&lt;a href=&#34;https://xiedaimala.com/tasks/42e05a0e-9233-4097-addd-43e61244be06/video_tutorials/1a2a0d76-c4ea-4f50-9ca9-a77c92db39dc&#34;&gt;快速上手SCSS&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;直构所有CSS demo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-23-12-30-0.pdf&#34;&gt;CSS 基础概念.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Git入门5】Git远程仓库   GitHub常用操作流程1_配置</title>
      <link>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A85git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-github%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B1_%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 04 Jan 2020 21:44:38 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A85git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-github%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B1_%E9%85%8D%E7%BD%AE/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;本地仓库和远程仓库是完全隔开的&lt;/li&gt;
&lt;li&gt;代码存储在云端GitHub&lt;/li&gt;
&lt;li&gt;SSH key验证身份 使用场景:可以避免我们重复的输入密码，提高开发效率；访问远程服务&lt;/li&gt;
&lt;li&gt;如果SSH key私钥(即.ssh文件夹中的id_rsa文件)被第三方获取，那么他将可以您的身份来操作 Git 仓库，这跟密码被盗一样严重&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;git远程仓库github-常用操作流程&#34;&gt;git远程仓库GitHub 常用操作流程&lt;/h2&gt;

&lt;h3 id=&#34;0-前提&#34;&gt;0. 前提&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;在GitHub上有一个账号&lt;/li&gt;
&lt;li&gt;git仓库在电脑上&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;上传代码：私钥加密&lt;/li&gt;
&lt;li&gt;GitHub用账号留下的公钥解密&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;1-生成ssh-key&#34;&gt;1. 生成ssh key&lt;/h3&gt;

&lt;h4 id=&#34;第1步-运行命令&#34;&gt;第1步 运行命令&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;your_email@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;第2步-三次回车-直到没有提示-然后&#34;&gt;第2步 三次回车，直到没有提示；然后&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat ~/.ssh/id_rsa_pub
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;第3步-复制内容-去你github主页-设置页面-ssh-key-标题填能表示清哪台电脑就行-填入公钥&#34;&gt;第3步 复制内容，去你GitHub主页&amp;gt;设置页面&amp;gt;SSH key&amp;hellip;，标题填能表示清哪台电脑就行，填入公钥&lt;/h4&gt;

&lt;p&gt;ok&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent&#34;&gt;GitHub_SSH key帮助文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;2-测试是否配置成功&#34;&gt;2. 测试是否配置成功&lt;/h3&gt;

&lt;h4 id=&#34;第1步-运行-命令&#34;&gt;第1步 运行 命令&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;第2步-确认github给的公钥&#34;&gt;第2步 确认GitHub给的公钥&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;不可敲回车，输入yes即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;第3步&#34;&gt;第3步&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;看到Hi xxx! You&amp;rsquo;ve successfully authenticated&amp;hellip;说明添加成功&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-注意&#34;&gt;3.注意&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;GitHub，别用HTTPS协议，每次要输密码不方便&lt;/li&gt;
&lt;li&gt;使用SSH key&lt;/li&gt;
&lt;li&gt;电脑-私钥 GitHub账号-公钥&lt;/li&gt;
&lt;li&gt;上传代码用私钥加密，github用公钥解密&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;如果手贱已经生成HTTPS链接了，不方便用&lt;code&gt;git remote add ...&lt;/code&gt;了&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以设置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote set-url origin git@github.com:yourName/***.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;来修改之前的origin URL，是不是很鸡贼&lt;/p&gt;

&lt;h3 id=&#34;4-查看生成的ssh-key密钥文件目录-备份&#34;&gt;4. 查看生成的SSH key密钥文件目录，备份&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/.ssh
ll
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls -al ~/.ssh
# Lists the files in your .ssh directory, if they exist
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp id_rsa id_rsa_bk
cp id_rsa.pub id_rsa_bk.pub
ll
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;h4 id=&#34;1-需要你复制的代码&#34;&gt;1. 需要你复制的代码&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t rsa -b 4096 -C 你的邮箱
cat ~/.ssh/id_rsa.pub # 得到公钥内容
ssh -T git@github.com
git remote add origin git@xxxxxxx
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-高级操作&#34;&gt;2. 高级操作&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch ~/.bashrc
echo &#39;alias ga=&amp;quot;git add&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc
echo &#39;alias gc=&amp;quot;git commit -v&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc
echo &#39;alias gl=&amp;quot;git pull&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc
echo &#39;alias gp=&amp;quot;git push&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc
echo &#39;alias gco=&amp;quot;git checkout&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc
echo &#39;alias gst=&amp;quot;git status -sb&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-最后-code-bashrc-在文件最后加上&#34;&gt;3. 最后 code ~/.bashrc 在文件最后加上&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias glog=&amp;quot;git log --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&#39; --abbrev-commit -- | less&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我的配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias Glg=&amp;quot;git log --color --graph --date=relative --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&#39; --abbrev-commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;提问&#34;&gt;提问&lt;/h3&gt;

&lt;p&gt;有没有一种可以实现一键ga+gv &amp;ldquo;xxx&amp;rdquo;+gl+gp+gst的Combo技？&lt;/p&gt;

&lt;p&gt;重复添加SSH key会如何？
&amp;gt; 会使你之前添加的key失效&lt;/p&gt;

&lt;h3 id=&#34;一些链接&#34;&gt;一些链接&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://juejin.im/post/5de8d849e51d455808332166&#34;&gt;高频使用的 Git 命令&lt;/a&gt;：
不是入门文档，官方文档肯定比我全面，这里是结合实际业务场景输出。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jeepxie.net/article/781036.html&#34;&gt;如果你看到 “access denied”&lt;/a&gt;：表示拒绝访问，那么你就需要使用 https 去访问，而不是 SSH 。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/kongkongkkk/article/details/78662715&#34;&gt;GitHub添加SSH key时的问题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://juejin.im/post/5c063c4ee51d451ded182458&#34;&gt;告诉你 ssh 的常见使用场景和配置&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000005607713&#34;&gt;git:如何管理本机的多个ssh密钥&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/iforever/p/7513172.html&#34;&gt;ssh keys自动化管理工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Coding/coding-docs/blob/master/doc/git/ssh-key.markdown&#34;&gt;在 Coding.net 添加公钥&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/en/github/authenticating-to-github/checking-for-existing-ssh-keys&#34;&gt;Checking for existing SSH keys&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent&#34;&gt;Generating a new SSH key and adding it to the ssh-agent&lt;/a&gt;&lt;/p&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-10-15-17-35.pdf&#34;&gt;git 远程仓库.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Git入门234】Git本地仓库常用操作流程2_分支相关操作_大总结</title>
      <link>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A8234git%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B2_%E5%88%86%E6%94%AF%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C_%E5%A4%A7%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 03 Jan 2020 22:48:00 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A8234git%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B2_%E5%88%86%E6%94%AF%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C_%E5%A4%A7%E6%80%BB%E7%BB%93/</guid>
      
        <description>

&lt;h2 id=&#34;创建分支git-branch&#34;&gt;创建分支git branch&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch x
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;仅创建一个叫x的分支拷贝，不对代码进行任何变动&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可以创造平行时间线x&lt;/li&gt;
&lt;li&gt;术语叫“分支”&lt;/li&gt;
&lt;li&gt;虚拷贝，引用&lt;/li&gt;
&lt;li&gt;可以同时基于master/branch x开发&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;切换分支git-checkout&#34;&gt;切换分支git checkout&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;.git同时维护master和branch x&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout x
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;两个时间线交替进行&lt;/li&gt;
&lt;li&gt;时不时查看下&lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -a/pwd&lt;/code&gt;下查看目录&lt;/li&gt;
&lt;li&gt;分别修改了各自分支后&amp;hellip;
看历史，非git命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;history
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;小结&#34;&gt;小结&lt;/h2&gt;

&lt;h3 id=&#34;git-branch&#34;&gt;git branch&lt;/h3&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 基于当前最新commit创建一个新的时间线（分支的快照），不是基于当前代码&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 在哪个分支提交，代码就出现在哪个分支&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 默认在master主分支&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Cmder/git-bash会提示目前所在的分支，如果你初始化过，iterm2默认不会，要设置&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;git-checkout&#34;&gt;git checkout&lt;/h3&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 用于切换另一个分支&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 当前目录有未add/未提交的代码，只要跟另一分支不冲突，就不需要理会，不影响硬盘上原有的文件（git reset是影响的）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 如果冲突（修改了文件内容），会报一个error，使&lt;code&gt;git checkout&lt;/code&gt; 切换失败&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 此时要么&lt;code&gt;git commit&lt;/code&gt;下，要么使用git stash合并冲突&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;直接查看当前所在branch&#34;&gt;直接查看当前所在branch&lt;/h2&gt;

&lt;p&gt;不加参：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;* master
  x
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;*就表示当前所在branch，智能的Cmder就不用了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;合并分支git-merge&#34;&gt;合并分支git merge&lt;/h2&gt;

&lt;h3 id=&#34;1-切到你想保留的那个分支-一般是主分支master&#34;&gt;1. 切到你想保留的那个分支，一般是主分支master&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git checkout master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-将另一个分支合并到当前分支&#34;&gt;2. 将另一个分支合并到当前分支&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git merge xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-提示有冲突-查看status&#34;&gt;3. 提示有冲突,查看status&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-在vscode里逐行修改&#34;&gt;4. 在VSCode里逐行修改&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;找到========&lt;/li&gt;
&lt;li&gt;逐行修改，删掉=======&lt;/li&gt;
&lt;li&gt;删掉标记&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/li&gt;
&lt;li&gt;删掉标记&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/li&gt;
&lt;li&gt;保存，修改完毕&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;5-git-add标记下-暂存&#34;&gt;5. git add标记下(暂存)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git add
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-直接提交&#34;&gt;6. 直接提交&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;不用加参数，自动添加标记 Merge branch &amp;lsquo;xxxx&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;git-merge-可能有冲突-也可能没&#34;&gt;git merge 可能有冲突，也可能没&lt;/h3&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;发现冲突&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 合并分支时 ，会得到CONFLICT提示&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 使用&lt;code&gt;git status -sb&lt;/code&gt;查看哪个/哪些文件冲突了&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;UU表示两边都改了&lt;/li&gt;
&lt;li&gt;s表示summary b表示brunch&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;解决冲突&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 依次打开每个文件&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 搜索====&lt;strong&gt;四个等于号&lt;/strong&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 在上下两个部分中选择要保留的代码，只选上面/只选下面/都保留&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 删除不用的代码&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 删除==== &amp;lt;&amp;lt;&amp;lt;&amp;lt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;这些标记&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;strong&gt;git add 暂存对应的文件&lt;/strong&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 再次 &lt;code&gt;git status -sb&lt;/code&gt;，解决下一个文件的冲突&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 直到没有冲突，&lt;strong&gt;运行&lt;code&gt;git commit&lt;/code&gt;（注意不需要选项）&lt;/strong&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;小结2&#34;&gt;小结2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&#34;分支可以合并&#34;&gt;分支可以合并&lt;/h3&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 进入要保留的分支&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 运行&lt;code&gt;git merge xxx&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 合并后，删除无用的分支&lt;code&gt;git branch -d xxx&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;h3 id=&#34;合并时冲突处理&#34;&gt;合并时冲突处理&lt;/h3&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 修改代码，解决冲突&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] 然后&lt;code&gt;git commit&lt;/code&gt;，使用默认的commit message&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Git本地仓库_大总结&lt;/p&gt;

&lt;h2 id=&#34;命令&#34;&gt;命令&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git config&lt;/code&gt; （6行配置）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git add 路径&lt;/code&gt; （标记：加进/移除购物车 暂存）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git status -sb&lt;/code&gt; （简化状态信息）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git commit -v&lt;/code&gt; （提交：结算+记笔账）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git branch xxx&lt;/code&gt; （创建分支）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git checkout xxx&lt;/code&gt; （进入分支）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git merge xxx&lt;/code&gt; （合并分支，还要add下，加进购物车）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git commit&lt;/code&gt; （提交合并，自动记账）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git branch -d xxx&lt;/code&gt; （砍掉分支）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git log&lt;/code&gt; （查看）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git reflog&lt;/code&gt; （本地上帝视角查看）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git reset --hard ******&lt;/code&gt; （版本穿越）&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;git目录-本地仓库&#34;&gt;.git目录：本地仓库&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 不会重复复制相同的文件（优化）&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 可以支持多个分支&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;一些细节&#34;&gt;一些细节&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;code&gt;git add&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;git add&lt;/code&gt;来临时记录变动外，也能记录&lt;code&gt;git rm xxx&lt;/code&gt;(处理的是文件的变化，而不是文件本身)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;比如删除一个文件后，依然要用&lt;code&gt;git add&lt;/code&gt; 来添加到待提交区&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm xxx
git add xxx
git status
git commit -v
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;当使用&lt;code&gt;git commit&lt;/code&gt;提交后，.git会移除xxx：
此时&lt;code&gt;git add xxx&lt;/code&gt; 、&lt;code&gt;git commit -m&lt;/code&gt;&amp;ldquo;delete xxx&amp;rdquo; 等同于 &lt;code&gt;git rm xxx&lt;/code&gt;、&lt;code&gt;git commit -m&lt;/code&gt;&amp;ldquo;delete xxx&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 大部分时候，只需&lt;code&gt;git add&lt;/code&gt; 和&lt;code&gt;git commit -v&lt;/code&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 不需要GUI，当然你会用，还知道原理&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;VSCode插件git-easy使用：在当前文件里Ctrl + Shift + p;搜&lt;code&gt;git add&lt;/code&gt;；&lt;code&gt;Add All Modified&lt;/code&gt;；&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;参考文章&#34;&gt;参考文章&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-8-10-23-55.pdf&#34;&gt;git 本地仓库.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;相关文章&#34;&gt;相关文章&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Git入门1】Git 本地仓库_常用操作流程1</title>
      <link>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A81git-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93_%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B1/</link>
      <pubDate>Thu, 02 Jan 2020 20:54:55 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A81git-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93_%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B1/</guid>
      
        <description>

&lt;h2 id=&#34;git-版本控制-常用操作流程&#34;&gt;git 版本控制 常用操作流程&lt;/h2&gt;

&lt;h3 id=&#34;第0步-准备工作&#34;&gt;第0步 准备工作&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/Desktop
mkdir demo-1
cd demo-1
touch index.html
code .
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;code . 表示用VSCode打开当前目录&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;第1步-git-init-会创建-git目录&#34;&gt;第1步 git init 会创建.git目录&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;用VSCode编辑index.html的第一个版本，随便写&lt;/li&gt;
&lt;li&gt;用Cmder/iterm2（也可以使用VSCode自带的命令行）&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在demo-1目录下初始化git本地仓库，运行:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;第2步-查看下-git目录&#34;&gt;第2步 查看下 .git目录&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls -a
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ls 不加参数，就不会显示以“.”开头的目录或文件&lt;/li&gt;
&lt;li&gt;.git 目录用来容纳你不同版本的代码快照&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;第3步-告诉git哪些文件的变动不需提交的-git-add-gitignore&#34;&gt;第3步 告诉git哪些文件的变动不需提交的：git add ./.gitignore&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;新建.gitignore文件&lt;/li&gt;
&lt;li&gt;将不需提交的文件名写入.gitignore，以回车分隔&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;.gitignore 描述哪些变动是不需要提交的
常见的有：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node_modules
.DS_Store
.idea
.vscode
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注明.gitignore之后，以后的提交变更只需&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就行了&lt;/p&gt;

&lt;h3 id=&#34;第4步-告诉git哪些文件的变动要提交的-git-add-xxx&#34;&gt;第4步 告诉git哪些文件的变动要提交的：git add xxx&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;git add是用来暂存提交的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add index.html
git add bg.css
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;可以不用管warning
只要没error就是正常的
VSCode里的状态：A表示已经添加，U表示未添加&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git add 路径&lt;/li&gt;
&lt;li&gt;选择哪些变动是需要提交的；&lt;/li&gt;
&lt;li&gt;路径可以是 &lt;strong&gt;绝对/相对&lt;/strong&gt; 路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;绝对路径：&lt;/strong&gt;&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; /c/Users/Fang/Desktop&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; /c/Users/Fang/Music&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; ~/Desktop&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; ~/Music&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;“/”表示根目录，绝对路径都是以“/” 开头的，“~ ”是 /c/Users/*** 的缩写，所以实际上 “~ ”也是以 / 开头的绝对路径&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;相对路径：&lt;/strong&gt;&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt;   .&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt;  ./xxx&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt;  ./xxx/&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt;  xxx&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt;  xxx/1.txt&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;“.”表示当前目录，相对路径都是“相对于当前”来说的；“../”表示上一级目录，也是相对路径&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;第5步-查看当前状态&#34;&gt;第5步 查看当前状态&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;第6步-提交&#34;&gt;第6步 提交&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;git commit -m 字符串&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &amp;quot;version 0.1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提交，并说明提交理由&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;注意空格与关闭英文引号&lt;/li&gt;
&lt;li&gt;字符串里有空格，就要用引号包起来;没有，可不加
实际上，git commit就是把当前提交的代码复制一份到.git里&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;更推荐：&lt;strong&gt;git commit -v&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -v
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在VSCode里编辑COMMIT EDITMSG信息&lt;/li&gt;
&lt;li&gt;帮我回顾，改了什么&lt;/li&gt;
&lt;li&gt;请把提交理由写得更详细一点&lt;/li&gt;
&lt;li&gt;v : &amp;ndash;verbose啰嗦&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在COMMIT EDITMSG里查看本次提交所有的变更&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -v --amend
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;第7步-修改了文件第二版后&#34;&gt;第7步 修改了文件第二版后&lt;/h3&gt;

&lt;p&gt;再重复4~6步，就ok了&lt;/p&gt;

&lt;h3 id=&#34;第8步-查看文件版本&#34;&gt;第8步 查看文件版本&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;第9步-多次提交&#34;&gt;第9步 多次提交&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;每次重复这两个操作，注意.不要少写，注意空格&lt;/p&gt;

&lt;h3 id=&#34;第10步-版本回滚-历史版本跳转&#34;&gt;第10步 版本回滚/历史版本跳转&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到各历史版本 commit xxxxxx&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git reset --hard ******
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;******是提交号的前4~6位，只要不重复&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;确保已经把所有代码commit了&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;最好 git status 一下，看看是否 &lt;strong&gt;nothing to commit, working tree clean&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;因为git reset &amp;ndash;hard操作会把所有未提交的变动（代码/文件/目录）直接删除&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;第11步-查看所有操作的历史版本-git-reset没提交的除外&#34;&gt;第11步 查看所有操作的历史版本，git reset没提交的除外&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;这就是git commit的意义&lt;/li&gt;
&lt;li&gt;只要git commit 了，代码就不会丢&lt;/li&gt;
&lt;li&gt;git log能上传到远程仓库，而git reflog只在本地仓库&lt;/li&gt;
&lt;li&gt;git log 是当前时间线的提交&lt;/li&gt;
&lt;li&gt;git reflog 是显示所有提交(commit)变动&lt;/li&gt;
&lt;li&gt;再用git reset &amp;ndash;hard回去就行了，如果有必要的话&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;git status几个状态&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a. 忽略（.gitignore）&lt;/li&gt;
&lt;li&gt;b. 暂存待提交（git add）&lt;/li&gt;
&lt;li&gt;c. 已提交（git commit）&lt;/li&gt;
&lt;li&gt;git reset &amp;ndash;hard时，除a b c外 其他状态会被清空&lt;/li&gt;
&lt;li&gt;git文件状态演变&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;git add 选择要提交的版本&lt;/li&gt;
&lt;li&gt;.gitignore文件中描述不提交的内容&lt;/li&gt;
&lt;li&gt;git commit -v 用来提交&lt;/li&gt;
&lt;li&gt;git log用来查看历史，只有当前提交的过程，不包括回滚的提交&lt;/li&gt;
&lt;li&gt;git reset &amp;ndash;hard *******用来切换版本&lt;/li&gt;
&lt;li&gt;git reflog用来查看所有提交历史&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-8-10-23-55.pdf&#34;&gt;git 本地仓库.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Git入门0】Git本地仓库六行配置与常见问题</title>
      <link>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A80git%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%85%AD%E8%A1%8C%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 01 Jan 2020 17:27:15 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/github/git%E5%85%A5%E9%97%A80git%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%85%AD%E8%A1%8C%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      
        <description>

&lt;h2 id=&#34;git-六行配置&#34;&gt;git 六行配置&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name 你的英文名
git config --global user.email 你的邮箱
git config --global push.default simple
git config --global core.quotepath false
git config --global core.editor &amp;quot;code --wait&amp;quot;
git config --global core.autocrlf input
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;查看配置&#34;&gt;查看配置&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global --list
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;注意：上面的英文名和邮箱跟 GitHub 没有关系。
可以跟 GitHub 的用户名和邮箱保持一致，
也可以不一致。我的是一致的。&lt;/li&gt;
&lt;li&gt;其中 git config &amp;ndash;global core.editor &amp;ldquo;code &amp;ndash;wait&amp;rdquo;用的是VSCode
也可以用Vim&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意：你需要保证 code 是可以直接在命令行执行的。&lt;/strong&gt;
如果不能执行，你需要安装 VSCode 并配置 PATH。
我（win10）的 PATH 里添加的内容是&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:~\AppData\Local\Programs\Microsoft VS Code\bin
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Mac 的配置方法，要在iTerm2中用命令code打开VSCode的步骤&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;运行VS code并打开命令面板（ ⇧⌘P ）&lt;/li&gt;
&lt;li&gt;输入 shell command 找到: Install ‘code&amp;rsquo; command in PATH 就行了。&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/3dda4756eca5&#34;&gt;code命令还支持其他参数：Visual Studio Code入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;常见问题&#34;&gt;常见问题&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;问：课上说 git reset &amp;ndash;hard XXXXXX 里面的 XXXXXX 是提交号，那为什么视频后面你又写出了 git reset &amp;ndash;hard master 这样的命令。&lt;/li&gt;
&lt;li&gt;答：请注意，说 git reset &amp;ndash;hard XXXXXX 的意思是我们「可以」使用 XXXXXX，并没有说我们「只能」使用 XXXXXX， &lt;strong&gt;显然reset 支持的参数不止 XXXXXX 这一种&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;git-就是一个命令而已&#34;&gt;git 就是一个命令而已&lt;/h3&gt;

&lt;p&gt;Bash命令行里有很多命令，git 就是其中一个，在git-bash里运行git命令&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;问：手贱 已经在根目录下git init了 怎办？&lt;/li&gt;
&lt;li&gt;或者对一个已经包含了git仓库的文件夹(假设该文件夹叫做TargetFile)再进行了次git init ，没多想就直接git add -A 怎办？&lt;/li&gt;
&lt;li&gt;答：取消对文件夹 git init 初始化操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;其实想要恢复很简单，在当前目录下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf .git/
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;删除.git文件夹就意味着桌面不再是仓库了。&lt;/li&gt;
&lt;li&gt;git只会认为有.git文件夹的路径是工作 仓库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-r ：递归的删除该目录下的文件夹和文件，及子目录下的文件夹和文件&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-f ： 忽略不存在的文件&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;将这个文件夹删除就相当于删掉了init生成的内容，直接移除git对该文件夹造成的影响，并且不会影响到该文件夹中那个已经是git仓库的文件夹的git状态&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;如何删除本地仓库&#34;&gt;如何删除本地仓库&lt;/h4&gt;

&lt;p&gt;开始删除所创建的仓库：&lt;/p&gt;

&lt;p&gt;1.显示所有本地分支&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.初始化本地版本库&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果显示：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reinitialized existing Git repository in C:/Users/Administrator/test1/.git/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;则:&lt;/p&gt;

&lt;p&gt;3.找到目录下.git&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./  ../  .git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;则:&lt;/p&gt;

&lt;p&gt;4.删除&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf .git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.可以看到master分支已经删除（test1中隐藏的.git文件夹已经删除）&lt;/p&gt;

&lt;p&gt;6.删除git之后 再去删除本地的库文件夹即可&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf XXXX
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;简而言之，就是删除仓库文件夹下隐藏的.git文件夹即可，直接在文件夹右键删除也可以吧&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-8-10-23-55.pdf&#34;&gt;git 本地仓库.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>解决问题的流程标准化（怎么搜索技术关键词)</title>
      <link>http://xmasuhai.xyz/post/firsttips/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E6%B5%81%E7%A8%8B%E6%A0%87%E5%87%86%E5%8C%96%E6%80%8E%E4%B9%88%E6%90%9C%E7%B4%A2%E6%8A%80%E6%9C%AF%E5%85%B3%E9%94%AE%E8%AF%8D/</link>
      <pubDate>Mon, 30 Dec 2019 00:20:34 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/firsttips/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E6%B5%81%E7%A8%8B%E6%A0%87%E5%87%86%E5%8C%96%E6%80%8E%E4%B9%88%E6%90%9C%E7%B4%A2%E6%8A%80%E6%9C%AF%E5%85%B3%E9%94%AE%E8%AF%8D/</guid>
      
        <description>

&lt;h3 id=&#34;遇问题-搜&#34;&gt;遇问题 搜&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;先搜Safari/Chrome里的收藏夹，看以前搜过的文章&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;google &lt;code&gt;xxx&lt;/code&gt; + &lt;code&gt;mdn&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CSS &lt;code&gt;caniuse&lt;/code&gt; + &lt;code&gt;xxx&lt;/code&gt;或者&lt;code&gt;css&lt;/code&gt;+ &lt;code&gt;xxx&lt;/code&gt; + &lt;code&gt;generator&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;抠细节 看全局&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;用面试官的角度去问，到卡壳为止&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;做知识图谱，准备用到以后项目中&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;每个知识点记忆流程，必须包含:&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;单独的演示代码(3处付代码链接)：&lt;/li&gt;
&lt;li&gt;效果图Png/Gif作成&lt;/li&gt;
&lt;li&gt;收集 他人的 工具化 重复实现 复现性 问题集&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://js.jirengu.com/?html,output&#34;&gt;饥人谷&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codesandbox.io&#34;&gt;代码沙盒&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codepen.io&#34;&gt;代码钢笔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 纸上默写思路&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>专业前端怎么正确浏览Demo</title>
      <link>http://xmasuhai.xyz/post/firsttips/%E4%B8%93%E4%B8%9A%E5%89%8D%E7%AB%AF%E6%80%8E%E4%B9%88%E6%AD%A3%E7%A1%AE%E6%B5%8F%E8%A7%88demo/</link>
      <pubDate>Sun, 22 Dec 2019 22:40:06 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/firsttips/%E4%B8%93%E4%B8%9A%E5%89%8D%E7%AB%AF%E6%80%8E%E4%B9%88%E6%AD%A3%E7%A1%AE%E6%B5%8F%E8%A7%88demo/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;没有人浏览网页是双击打开&lt;code&gt;xxx.html&lt;/code&gt;文件，这不是用户通常的操作，特别是&lt;strong&gt;专业前端绝对不允许&lt;/strong&gt;这样做，可能会遇到奇奇怪怪的问题&lt;/li&gt;
&lt;li&gt;必须通过输入网址来打开预览页面&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;两个工具模拟打开网页&#34;&gt;两个工具模拟打开网页&lt;/h3&gt;

&lt;h4 id=&#34;1-用-http-server&#34;&gt;1.用&lt;code&gt;http-server&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;用&lt;code&gt;yarn&lt;/code&gt;安装：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn global add http-server
...
hs --version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;怎么用？&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/xxxx # 进入目录下
http-server . -c-1
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;代表缓存，&lt;code&gt;-1&lt;/code&gt;代表不需要，让&lt;code&gt;http-server&lt;/code&gt;在无缓存的模式下运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;省略写法（省略&amp;rdquo;http-server&amp;rdquo;和&amp;rdquo;.&amp;ldquo;）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/yourDemo
hs -c-1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Starting up http-server, serving ./
Available on:
  http://127.0.0.1:8080
  http://192.168.0.105:8080
Hit CTRL-C to stop the server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按住Ctrl/CMD点击运行任何一个访问端口，加路径&lt;code&gt;/xxx.html&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;提问bug代码.html，不要双击打开，要在终端里通过&lt;code&gt;http-server&lt;/code&gt;模拟，用网址来访问一个网页后，再提问&lt;/p&gt;

&lt;p&gt;为什么我的hs只能显示两个端口？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;2-用-parcel&#34;&gt;2.用&lt;code&gt;parcel&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;parcel&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn global add parcel
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在目录下，直接用&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;parcel yourDemo.html
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;访问开启的地址，像用户一样，开始浏览，工具能用就行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- End --&gt;

&lt;div&gt;·未完待更·&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://xiedaimala.com/tasks/62fe3072-e6f4-4582-bc8e-258315b41fca/video_tutorials/a5c7f116-f56d-4efe-b3a0-0bb75a0b0a58&#34;&gt;2020方方前端体系&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Hugo入门3】个人博客换主题_常用操作流程</title>
      <link>http://xmasuhai.xyz/post/hugo/hugo%E5%85%A5%E9%97%A83%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8D%A2%E4%B8%BB%E9%A2%98_%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Sat, 21 Dec 2019 23:57:18 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/hugo/hugo%E5%85%A5%E9%97%A83%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8D%A2%E4%B8%BB%E9%A2%98_%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/</guid>
      
        <description>

&lt;h2 id=&#34;换主题&#34;&gt;换主题&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;按照主题主页操作，下载主题文件到themes路径中;&lt;/li&gt;
&lt;li&gt;修改配置文件config.toml里的&lt;code&gt;theme = &#39;...&#39;&lt;/code&gt;名称;&lt;/li&gt;
&lt;li&gt;Ctrl + c关闭hugo server；&lt;/li&gt;
&lt;li&gt;重启&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;配置文件config-toml的设置要点&#34;&gt;配置文件config.toml的设置要点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;baseURL：你的博客地址&lt;code&gt;https://yourName.github.io/&lt;/code&gt;；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;enableEmoji&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pageinate = &amp;ldquo;3&amp;rdquo; 每页显示的文章&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;title： 标题&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;theme：主题名 以Jane为例&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;defaultContentLanguage = &amp;ldquo;zh-cn&amp;rdquo;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;下载的主题文件里有-git&#34;&gt;下载的主题文件里有.git&lt;/h3&gt;

&lt;p&gt;直接删掉：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf themes/***/.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者gitignore掉，在 Blog 目录下创建并修改 .gitignore&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-.gitignore&#34;&gt;public/*
themes/*/.git
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;不需要生成子仓库&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;添加-gitignore-文件&#34;&gt;添加 .gitignore 文件&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 Hugo 本地编译时会产生 public 文件夹，但是这个文件夹中的内容对于 Blog 仓库来说是不需要的 (包括用来存放主题的 themes 文件夹和主题产生的 resources 文件夹也是不需要的)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以用一个.gitignore 文件来排除这些内容&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在 Blog 目录下创建并修改 .gitignore&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-.gitignore&#34;&gt;public/*
themes/*
resources/*
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然后提交到 GitHub&lt;/p&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【Hugo入门4】写文章同步更新GitHub_常用操作流程</title>
      <link>http://xmasuhai.xyz/post/hugo/hugo%E5%85%A5%E9%97%A84%E5%86%99%E6%96%87%E7%AB%A0%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0github_%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Sat, 21 Dec 2019 23:56:48 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/hugo/hugo%E5%85%A5%E9%97%A84%E5%86%99%E6%96%87%E7%AB%A0%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0github_%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/</guid>
      
        <description>

&lt;!-- more --&gt;

&lt;blockquote&gt;
&lt;p&gt;本文默认已经安装了hugo并配置主题/VSCode/
初始化过本地&amp;amp;远程仓库（两个互相嵌套且忽略的不同仓库）/备份过github.io-generator仓库&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入你博客生成器的目录：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd yourName.github.io-generator
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建一篇博客md，用VSCode打开Hugo博客生成器目录，写文章&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;code .
hugo new posts/XXXX.md
hugo new posts/&amp;quot;XX XX-xx !【/x\】?.md&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;注意路径是posts，不然会像方方把第二篇博客新建到theme目录中去了&lt;/li&gt;
&lt;li&gt;以及当前目录是博客生成器的目录&lt;code&gt;yourName.github.io-generator&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;XXXX.md&lt;/code&gt;中若要包含特殊字符，需用&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;引上&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;运行Hugo服务器，预览，修改&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编辑完成后，运行&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo server -D
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/&#34;&gt;点击，预览一下本地&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将draft里的 true改为false&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;提交git本地仓库&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;add new post :xxx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;运行&lt;code&gt;hugo&lt;/code&gt;将修改更新到public目录&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入public目录，git一条龙（本地提交+发布到GitHub Pages上）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd public
git add .
git commit -m &amp;quot;xx**xx&amp;quot;
(git pull)
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;访问博客，看看效果，&lt;a href=&#34;http://xmasuhai.xyz/&#34;&gt;这是我的&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;备份generator或creator目录，git一条龙（本地提交+发布到GitHub Pages上）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ..  # 进入yourName.github.io-generator目录
git add .
git commit -m &amp;quot;xx**xx&amp;quot;
(git pull)
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
    <item>
      <title>【HTML非全解3】HTML常用标签</title>
      <link>http://xmasuhai.xyz/post/html/html%E9%9D%9E%E5%85%A8%E8%A7%A33html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Sat, 21 Dec 2019 23:50:44 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/html/html%E9%9D%9E%E5%85%A8%E8%A7%A33html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      
        <description>

&lt;h2 id=&#34;a-a-标签的用法&#34;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 标签的用法&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;请先了解下：&lt;a href=&#34;http://xmasuhai.xyz/posts/专业前端怎么正确浏览demo/&#34;&gt;专业前端怎么正确浏览Demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;a-a-标签属性&#34;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 标签属性&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;href&lt;/code&gt; 超链接&lt;code&gt;（hyper + ref）&lt;/code&gt;链接一个网址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;target&lt;/code&gt; 指定在哪个窗口大开&lt;code&gt;href&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;download&lt;/code&gt;布尔属性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rel=noopener&lt;/code&gt;：&lt;a href=&#34;javascript&#34;&gt;&lt;code&gt;no opener&lt;/code&gt;为防止一个bug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;a-a-作用&#34;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 作用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;跳转外部页面&lt;/li&gt;
&lt;li&gt;跳转内部锚点&lt;/li&gt;
&lt;li&gt;跳转到邮箱等&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;a-a-标签属性-href-的取值&#34;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 标签属性&lt;code&gt;href&lt;/code&gt;的取值&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;href&lt;/code&gt; 超链接&lt;code&gt;（hyper + ref）&lt;/code&gt;链接一个网址，可以跳转到一个页面/锚点，可以发邮件，可以打电话，可以js死链测试&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;可取值-9-种-网址-3-路径-2-伪协议-3-id-1&#34;&gt;可取值（9）种 ：网址（3）/路径（2）/伪协议（3）/id（1）&lt;/h4&gt;

&lt;h5 id=&#34;网址-3&#34;&gt;网址(3)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://google.com&lt;/code&gt;：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://google.com&lt;/code&gt;：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;//google.com&lt;/code&gt;：无协议网址&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;手端机同步访问桌面端HTML页面&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;保证同一个wifi下：直接访问hs给的访问端口+页面路径&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微信手机助手发链接到手机上，依次点击&lt;/li&gt;
&lt;li&gt;Chrome开发测者工具F12&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;点选Network&amp;gt;Preserve log&lt;/li&gt;
&lt;li&gt;然后点击&lt;code&gt;a-href.html&lt;/code&gt;里的超链接，跳转到&lt;code&gt;//google.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;看第一个&lt;code&gt;google.com&lt;/code&gt;请求，&lt;code&gt;Headers&lt;/code&gt;是&lt;code&gt;http://google.com&lt;/code&gt;，继承当前的&lt;code&gt;http://127....&lt;/code&gt;，自动补全&lt;code&gt;http://&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://google.com&lt;/code&gt;重定向，跳转到&lt;code&gt;http://www.google.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进到&lt;code&gt;http://www.google.com&lt;/code&gt;请求里&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://www.google.com&lt;/code&gt;重定向跳转到到&lt;code&gt;https://www.google.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最终到达，&lt;code&gt;绿色Status code:200&lt;/code&gt;，历史原因&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;为什么用&lt;code&gt;//&lt;/code&gt;，因为是最高级，会自动选择使用&lt;code&gt;http://&lt;/code&gt;还是&lt;code&gt;https://&lt;/code&gt;，不会选错（即使没配&lt;code&gt;https&lt;/code&gt;的话），具体原因，请学HTTP协议&lt;/li&gt;
&lt;li&gt;注意要有&lt;code&gt;https://&lt;/code&gt;或者&lt;code&gt;http://&lt;/code&gt;亦或&lt;code&gt;//&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;路径-2&#34;&gt;路径(2)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;绝对路径&lt;code&gt;/a/b/c&lt;/code&gt;和相对路径&lt;code&gt;a/b/c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;直接加&lt;code&gt;index.html&lt;/code&gt;和&lt;code&gt;./index.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;绝对路径&lt;code&gt;/a/b/c&lt;/code&gt;
创建路径&lt;code&gt;a/b/c.html&lt;/code&gt;：添加标签：&lt;code&gt;&amp;lt;a href=&amp;quot;/a/b/c.html&amp;quot;&amp;gt;c.html&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Chrome开发测者工具F12&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;清空Network&amp;gt;Preserve log，保留勾选&lt;/li&gt;
&lt;li&gt;地址栏显示：&lt;code&gt;192.168.56.1:8080/a/b/c.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;同样是&lt;code&gt;/a/b/c.html&lt;/code&gt;根目录相对于a路径下，而不是到a盘下&lt;/li&gt;
&lt;li&gt;http协议的约定&lt;/li&gt;
&lt;li&gt;区别基于文件的本地根目录&lt;/li&gt;
&lt;li&gt;使用http协议，就不再是基于本地文件，根目录就不是硬盘根目录&lt;/li&gt;
&lt;li&gt;在哪里开启hs服务，哪里就是根目录&lt;/li&gt;
&lt;li&gt;Chrome地址栏隐藏了&lt;code&gt;http://&lt;/code&gt;，复制粘贴一下地址栏&lt;/li&gt;
&lt;li&gt;所以绝对路径&lt;code&gt;/a/b/c&lt;/code&gt;前面的&lt;code&gt;/a&lt;/code&gt;不是根目录，而是hs的根目录，这里是&lt;code&gt;html-demo-2&lt;/code&gt;下的路径&lt;/li&gt;
&lt;li&gt;不要用双击打开，&lt;code&gt;flie:///&lt;/code&gt;作为前缀&lt;/li&gt;
&lt;li&gt;此时Preserve log显示，点击链接，就转到本地根目录下的路径里去了&lt;/li&gt;
&lt;li&gt;双击打开，绝对路径就错了&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;相对路径&lt;code&gt;a/b/c&lt;/code&gt;：添加标签：&lt;code&gt;&amp;lt;a href=&amp;quot;a/b/c.html&amp;quot;&amp;gt;c.html&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;意思是在当前目录(&lt;code&gt;html-demo-2/&lt;/code&gt;)下，找a找b找c.html，效果和绝对路径一样，正确跳转到c.html&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;直接写文件名&lt;code&gt;index.html&lt;/code&gt;，会在当前目录下找，或写&lt;code&gt;./index.html&lt;/code&gt;，效果等同&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;javascript伪协议-3&#34;&gt;javascript伪协议(3)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;javascript:code;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mailto:mailbox@xxx.com&lt;/code&gt;给我发邮件，注意隐私，地址用unicode转码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tel:12345678901&lt;/code&gt;简历上可以附上电话，打给我，手机页面上使用&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;javascript:alert(1);&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;，小写javascript，冒号分号注意不能少，里面写可执行的js代码，早期功能，基本不用&lt;/li&gt;
&lt;li&gt;现在的javascript伪协议用作点击后无动作的&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;标签，点击后无事件发生&lt;/li&gt;
&lt;li&gt;产品经理的需求场景：需要一个什么都不做的&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;标签，需要点击“查看按钮”，弹出一个对话框div&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;不写空的伪协议，即href留空，点击&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;标签，页面会刷新，蛋疼&lt;/li&gt;
&lt;li&gt;写了#的href，也不能满足需求：点击&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;标签，页面会自动滚到顶部&lt;/li&gt;
&lt;li&gt;而一般只是希望一个什么都不做的&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;标签&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;javascript:void(0);&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;也一样，页面不会刷新，也不会滚到顶部，只访问了一个空代码&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;href=&amp;quot;#&amp;quot;&lt;/code&gt;与&lt;code&gt;href=&amp;quot;javascript:void(0)&amp;quot;&lt;/code&gt;的区别：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;# 包含了一个位置信息，默认的锚是#top 也就是网页的上端。&lt;/li&gt;
&lt;li&gt;而&lt;code&gt;javascript:void(0);&lt;/code&gt;, 仅仅表示一个死链接。&lt;/li&gt;
&lt;li&gt;在页面很长的时候会使用 # 来定位页面的具体位置，格式为：&lt;code&gt;# + id&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;如果你要定义一个死链接请使用 &lt;code&gt;javascript:void(0);&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;又或者试试&lt;code&gt;###&lt;/code&gt;，&lt;code&gt;#!&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多请看&lt;a href=&#34;https://segmentfault.com/q/1010000000339082&#34;&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;javascript:void(0)&amp;quot;&amp;gt;&lt;/code&gt;这样写为什么不好?&lt;/a&gt;和&lt;a href=&#34;https://www.jianshu.com/p/39fd29684d80/&#34;&gt;这篇&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;页面内id锚点-1&#34;&gt;页面内id锚点(1)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;href=#xxx&lt;/code&gt;点击查看xxx锚点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;demo目录下新建&lt;code&gt;a-herf.html&lt;/code&gt;，&lt;code&gt;./a/b/c.html&lt;/code&gt;，&lt;code&gt;index.thml&lt;/code&gt;等文件，&lt;a href=&#34;http://xmasuhai.xyz/demo-test/html-demo-2/a-href.html&#34;&gt;测试代码链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;a-a-标签属性-target-的取值&#34;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 标签属性&lt;code&gt;target&lt;/code&gt;的取值&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;target&lt;/code&gt;的取值决定指定目标窗口在哪里点开&lt;code&gt;href&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;内置名字&#34;&gt;内置名字&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_self&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_blank&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_top&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_parent&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;target-self-默认值-在当前页面打开链接&#34;&gt;&lt;code&gt;target=_self&lt;/code&gt;默认值，在当前页面打开链接&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;谷歌不允许在iframe指向它，打开它的页面，防止gooBai&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;target-blank-在新的标签页打开&#34;&gt;&lt;code&gt;target=_blank&lt;/code&gt;在新的标签页打开&lt;/h5&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;引入一个新标签&lt;code&gt;&amp;lt;iframe&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;帮助理解&lt;code&gt;_top&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;两个页面是层级关系：&lt;a href=&#34;http://xmasuhai.xyz/demo-test/html-demo-2/a-target.html&#34;&gt;测试代码链接&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;target-top-在顶级页面打开链接&#34;&gt;&lt;code&gt;target=_top&lt;/code&gt;在顶级页面打开链接&lt;/h5&gt;

&lt;h5 id=&#34;target-parent-在当前连接所在页面的上一级页面打开链接&#34;&gt;&lt;code&gt;target=_parent&lt;/code&gt;在当前连接所在页面的上一级页面打开链接&lt;/h5&gt;

&lt;h5 id=&#34;target-xxx-有两个链接才看得出来-它的意思是如果有xxx-就在xxx打开窗口-如果不存在-就创建一个叫xxx的窗口-第二次打开不同的-会覆盖掉之前的&#34;&gt;&lt;code&gt;target=&amp;quot;xxx&amp;quot;&lt;/code&gt;有两个链接才看得出来，它的意思是如果有xxx，就在xxx打开窗口，如果不存在，就创建一个叫xxx的窗口，第二次打开不同的，会覆盖掉之前的&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;验证：控制台打：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;window.name # &amp;quot;xxx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;重复利用同一个窗口打开页面&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;除了写窗口的名字，还可以写iframe的名字&lt;/p&gt;

&lt;p&gt;[测试代码链接]（）&lt;/p&gt;

&lt;h4 id=&#34;程序员命名&#34;&gt;程序员命名&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;window&lt;/code&gt;的name：&lt;code&gt;xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iframe&lt;/code&gt;的name：&lt;code&gt;xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;a-a-标签其他属性&#34;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 标签其他属性&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;download&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不是打开页面，而是下载，不是所有浏览器都支持（特别是手机）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rel=noopener&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;iframe-标签&#34;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;标签&lt;/h3&gt;

&lt;p&gt;内嵌窗口，较少使用，不好用，被Ajax方式代替&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;table-table-标签的用法&#34;&gt;&lt;code&gt;&amp;lt;table&amp;gt;&amp;lt;/table&amp;gt;&lt;/code&gt;标签的用法&lt;/h2&gt;

&lt;h3 id=&#34;相关的标签-table-table-系列&#34;&gt;相关的标签&lt;code&gt;&amp;lt;table&amp;gt;&amp;lt;/table&amp;gt;&lt;/code&gt;系列&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;thead&amp;gt;&amp;lt;/thead&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;tfoot&amp;gt;&amp;lt;/tfoot&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&amp;lt;/tr&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;相关的样式&#34;&gt;相关的样式&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;table-layout&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;border-collapse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spacing&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;img-标签的用法&#34;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签的用法&lt;/h2&gt;

&lt;h3 id=&#34;作用&#34;&gt;作用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;发出get请求，展示一张图片&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;属性&#34;&gt;属性&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;alt/height/width/src&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;事件&#34;&gt;事件&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;onload/onerror&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;响应式&#34;&gt;响应式&lt;/h3&gt;

&lt;p&gt;max-width:100%&lt;/p&gt;

&lt;h3 id=&#34;可替换元素&#34;&gt;可替换元素&lt;/h3&gt;

&lt;p&gt;面试题：&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element&#34;&gt;可替换元素 mdn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;代码：&lt;/p&gt;

&lt;h2 id=&#34;form-标签的用法&#34;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标签的用法&lt;/h2&gt;

&lt;h3 id=&#34;作用-1&#34;&gt;作用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;法get或post请求，然后&lt;strong&gt;刷新页面&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;属性-mdn-https-developer-mozilla-org-zh-cn-docs-web-html-element-form&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form/&#34;&gt;属性 mdn&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;action / autocomplete / method / target&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;事件-1&#34;&gt;事件&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;onsubmit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;input-标签的用法&#34;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 标签的用法&lt;/h2&gt;

&lt;h3 id=&#34;作用-2&#34;&gt;作用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;让用户输入内容&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;属性-1&#34;&gt;属性&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;类型&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;事件-2&#34;&gt;事件&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;onchange / onfocus / onblur&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;验证器&#34;&gt;验证器&lt;/h3&gt;

&lt;p&gt;HTML5新增功能&lt;/p&gt;

&lt;h2 id=&#34;其他输入标签&#34;&gt;其他输入标签&lt;/h2&gt;

&lt;h3 id=&#34;标签&#34;&gt;标签&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;select + option&lt;/li&gt;
&lt;li&gt;textarea&lt;/li&gt;
&lt;li&gt;label&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;注意事项&#34;&gt;注意事项&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;一般不监听input的click事件&lt;/li&gt;
&lt;li&gt;form里面的input要有name&lt;/li&gt;
&lt;li&gt;form里面放一个属性&lt;code&gt;type=submit&lt;/code&gt;才能触发submit事件&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;

&lt;h3 id=&#34;标签-1&#34;&gt;标签&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;li&gt;audio&lt;/li&gt;
&lt;li&gt;canvas&lt;/li&gt;
&lt;li&gt;svg&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;注意事项2&#34;&gt;注意事项2&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;兼容性：文档&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://static.xiedaimala.com/xdml/file/3ac7c224-c23d-491f-84b5-4fabfbeab9b8/2019-8-17-12-13-42.pdf&#34;&gt;【HTML全解】HTML重难点pdf&lt;/a&gt;&lt;/p&gt;

&lt;!-- Article End --&gt;

&lt;hr /&gt;

&lt;!-- test --&gt;

&lt;div style=&#34;text-align:center;&#34;&gt;·未完待续·&lt;/div&gt;

&lt;!-- ok --&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文章&#34;&gt;参考文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;相关文章&#34;&gt;相关文章&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;作者： Joel&lt;/li&gt;
&lt;li&gt;文章链接：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xmasuhai.xyz/posts/版权声明链接/&#34;&gt;版权声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非自由转载-非商用-非衍生-保持署名&lt;/li&gt;
&lt;li&gt;&lt;a style=&#39;color:#DB2D5D;&#39; href=&#39;https://xiedaimala.com/bbs/users/8c266e6f-55a2-4348-a180-17cb8cdb2c46#/?page=1&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;河&lt;/a&gt;
&lt;a style=&#39;color:#006CFF;&#39; href=&#39;https://juejin.im/user/59abfad26fb9a0248f4aa221&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;掘&lt;/a&gt;
&lt;a style=&#39;color:#009A61;&#39; href=&#39;https://segmentfault.com/u/joel_59b17eb9d2155&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;思&lt;/a&gt;
&lt;a style=&#39;color:#0084FF;&#39; href=&#39;https://www.zhihu.com/people/xue-shou-41/posts&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;知&lt;/a&gt;
&lt;a style=&#39;color:#EA6F5A;&#39; href=&#39;https://www.jianshu.com/u/079916729823&#39; target=&#39;_blank&#39; rel=&#39;noreferrer noopener&#39;&gt;简&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
      
    </item>
    
  </channel>
</rss>
