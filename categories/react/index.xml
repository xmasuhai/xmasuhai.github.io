<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Joel in The House</title>
    <link>http://xmasuhai.xyz/categories/react/</link>
    <description>Recent content in React on Joel in The House</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Joel Xu</copyright>
    <lastBuildDate>Fri, 07 Oct 2022 01:31:17 +0800</lastBuildDate><atom:link href="http://xmasuhai.xyz/categories/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【React非全解 5】React 内置 Hooks 各个击破</title>
      <link>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-5hooks-%E5%90%84%E4%B8%AA%E5%87%BB%E7%A0%B4/</link>
      <pubDate>Fri, 07 Oct 2022 01:31:17 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-5hooks-%E5%90%84%E4%B8%AA%E5%87%BB%E7%A0%B4/</guid>
      <description>Hooks 各个击破 大纲链接§ [toc] React 内置的 Hooks 主要有以下几个： useState 组件状态 useEffect 副作用 useLayoutEffect useContext 上下文 useMemo 缓存 useCallback 回调 useReducer 统一状态管理（替代Redux） useRef 引用 useImperativeHandle useDebugValue 自定义 1. useState</description>
    </item>
    
    <item>
      <title>【React非全解 4】Hooks 之 UseState 原理解析</title>
      <link>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-4hooks-%E4%B9%8B-usestate-%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 05 Oct 2022 01:19:24 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-4hooks-%E4%B9%8B-usestate-%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/</guid>
      <description>Hooks 之 useState 原理解析 大纲链接§ [toc] 逐步分析 useState 基本原理和源码近似实现 1. 最简单的 useState 实现 ⇧ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function App() { console.log(&amp;#39;App 运行了&amp;#39;) const [n, setN] = useState(0)</description>
    </item>
    
    <item>
      <title>【React非全解 3】函数组件</title>
      <link>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-3%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Tue, 04 Oct 2022 00:40:52 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-3%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6/</guid>
      <description>函数组件 大纲链接§ [toc] 函数组件比 class 组件简单 1. 函数组件创建方式 ⇧ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // Arrow Function Component const Hello = (props) =&amp;gt; { return ( &amp;lt;div&amp;gt; {props.message} &amp;lt;/div&amp;gt; ) } // 简写</description>
    </item>
    
    <item>
      <title>【React非全解 2】Class 组件详解</title>
      <link>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-2class-%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 03 Oct 2022 09:50:46 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-2class-%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid>
      <description>Class 组件详解 大纲链接§ [toc] Class 组件虽然是已淘汰的繁杂用法，没有函数组件那样的简洁清晰的语法，“能效比”低，新项目基本不用，只是使用 Class 组件必须有更扎</description>
    </item>
    
    <item>
      <title>【React非全解 1】React 类组件和函数组件</title>
      <link>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-1react-%E7%B1%BB%E7%BB%84%E4%BB%B6%E5%92%8C%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sat, 01 Oct 2022 23:51:43 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-1react-%E7%B1%BB%E7%BB%84%E4%BB%B6%E5%92%8C%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6/</guid>
      <description>React 类组件和函数组件 大纲链接§ [toc] 1. 元素 v.s. 组件 ⇧ Element v.s. Component 元素与组件 这是一个 React 元素（d小写）：const div = React.createEkement(&#39;div&#39;, ...) 这是一个 React 组件（D大写）：const</description>
    </item>
    
    <item>
      <title>【React非全解 0】React起手式</title>
      <link>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-0react%E8%B5%B7%E6%89%8B%E5%BC%8F/</link>
      <pubDate>Sat, 24 Sep 2022 20:20:15 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/react/react%E9%9D%9E%E5%85%A8%E8%A7%A3-0react%E8%B5%B7%E6%89%8B%E5%BC%8F/</guid>
      <description>React起手式 大纲链接 § [toc] 如何入门 React 写一个 Hello World，写一个 +1，写一个 ToDo 把文档过一遍 组件 父子组件通信 组件生命周期 使用Hooks API模</description>
    </item>
    
  </channel>
</rss>
