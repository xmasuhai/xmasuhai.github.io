<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Joel in The House</title>
    <link>http://xmasuhai.xyz/post/</link>
    <description>Recent content in Posts on Joel in The House</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Joel Xu</copyright>
    <lastBuildDate>Sun, 08 Mar 2020 20:53:24 +0800</lastBuildDate>
    
	<atom:link href="http://xmasuhai.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【JS非全解08】JS运算符与类型转换</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A308js%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Sun, 08 Mar 2020 20:53:24 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A308js%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>内容提要 算术远算符 比较运算符 布尔运算符 二进制位运算符 其他运算符 算术远算符 数学运算 number运算 Addition+、Subtraction-</description>
    </item>
    
    <item>
      <title>【JS非全解07】JS 实战，会动的代码实现全程记录</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A307js-%E5%AE%9E%E6%88%98%E4%BC%9A%E5%8A%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%A8%8B%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Thu, 27 Feb 2020 01:49:17 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A307js-%E5%AE%9E%E6%88%98%E4%BC%9A%E5%8A%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%A8%8B%E8%AE%B0%E5%BD%95/</guid>
      <description>目标：动态展示代码与效果 页面效果一 源码地址 页面效果二 源码地址 CRM 实现效果、了解代码思路、会用会查相关API、可复现步骤（半盲打）、拓展 可以将之</description>
    </item>
    
    <item>
      <title>【JS非全解06】JS 函数的执行时机与JS 函数浅析</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A306js-%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA%E4%B8%8Ejs-%E5%87%BD%E6%95%B0%E6%B5%85%E6%9E%90/</link>
      <pubDate>Wed, 26 Feb 2020 00:58:40 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A306js-%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA%E4%B8%8Ejs-%E5%87%BD%E6%95%B0%E6%B5%85%E6%9E%90/</guid>
      <description>重点内容提要：JS 函数的执行时机 1）为什么如下代码会打印 6 个 6 1 2 3 4 5 6 let i = 0 for(i = 0; i&amp;lt;6; i++){ setTimeout(()=&amp;gt;{ console.log(i) },0) } 我认为本篇正文涉及到的知识（作用域、闭包</description>
    </item>
    
    <item>
      <title>【JS非全解05】JS 数组</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A305js-%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sun, 23 Feb 2020 22:26:26 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A305js-%E6%95%B0%E7%BB%84/</guid>
      <description>数组对象，区别于其他语言，比如JAVA，JS其实没有真正的数组，只是用对象模拟数组，即内置对象(built-in Object) JS的数组是非经典数组 典型</description>
    </item>
    
    <item>
      <title>【JS非全解04】JS对象的分类</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A304js%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%86%E7%B1%BB/</link>
      <pubDate>Wed, 19 Feb 2020 23:43:19 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A304js%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%86%E7%B1%BB/</guid>
      <description>JS对象需要分类吗？ 描述抽象的事物需要分类 JS 需要计算存储抽象的概念 &amp;hellip; 从实例看JS对象分类的必要性 一个简单地例子：输出各种形状的面积和周长 先从</description>
    </item>
    
    <item>
      <title>【JS非全解03】JS对象基本用法</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A303js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 16 Feb 2020 05:01:41 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A303js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>JavaScript的对象是JS中唯一一种复杂类型，它可以存其他七种原始值（数字类型Number、字符串类型String、布尔类型Boole</description>
    </item>
    
    <item>
      <title>【JS非全解00】内存图与JS世界</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A300%E5%86%85%E5%AD%98%E5%9B%BE%E4%B8%8Ejs%E4%B8%96%E7%95%8C/</link>
      <pubDate>Fri, 14 Feb 2020 02:00:49 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A300%E5%86%85%E5%AD%98%E5%9B%BE%E4%B8%8Ejs%E4%B8%96%E7%95%8C/</guid>
      <description>一切都运行在内存里 开机 操作系统在 C 盘（macOS 的在根目录下的多个目录里） 当按下开机键，主板通电，开始读取固件 固件就是固定在主板上的存储设备</description>
    </item>
    
    <item>
      <title>【JS非全解00】JavaScript 概览</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A300javascript-%E6%A6%82%E8%A7%88/</link>
      <pubDate>Fri, 14 Feb 2020 01:59:54 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A300javascript-%E6%A6%82%E8%A7%88/</guid>
      <description>学 JS 的基本要求 软要求 逻辑能力 质疑能力 抽象思维 逻辑能力 三段论逻辑 + 别人的思路总结 写代码基本就是写逻辑 质疑能力 墨菲定律，不相信人类，包括自己 大部</description>
    </item>
    
    <item>
      <title>【JS非全解02】JS数据类型</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A302js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Fri, 14 Feb 2020 01:37:55 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A302js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>数字与字符串 1和&#39;1&#39;完全不同 功能 数字能加减乘除模和值的比较，字符串不能计算值，无法进行值的大小比较（严谨的说不算隐式转换的话） 字符串能表示</description>
    </item>
    
    <item>
      <title>【JS非全解01】JS基本语法</title>
      <link>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A301js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 13 Feb 2020 02:08:56 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/js/js%E9%9D%9E%E5%85%A8%E8%A7%A301js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <description>学的主要版本ES6 兼容以前 取其精华，去其糟粕 注重“主领域”：前端，而不是“主语言” JS使用最广 门槛极低 生产力 基本语法 表达式与语句 表达式 1 + 2</description>
    </item>
    
    <item>
      <title>【更好的CSS 01】SCSS入门</title>
      <link>http://xmasuhai.xyz/post/scss/%E6%9B%B4%E5%A5%BD%E7%9A%84css-01scss%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 07 Feb 2020 23:37:07 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/scss/%E6%9B%B4%E5%A5%BD%E7%9A%84css-01scss%E5%85%A5%E9%97%A8/</guid>
      <description>快速上手 SCSS是什么 加强版的CSS? 懒人版CSS 解决CSS的一个缺陷 CSS实现了变量--var，支持的浏览器ok(2020)，单功能单一 当</description>
    </item>
    
    <item>
      <title>【CSS非全解11】CSS 知识总结与扩展</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A311css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8E%E6%89%A9%E5%B1%95/</link>
      <pubDate>Fri, 07 Feb 2020 00:39:55 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A311css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B8%8E%E6%89%A9%E5%B1%95/</guid>
      <description>CSS都学了些什么？ 基础技术（面向实际工作） 非体系化学CSS 一些CSS的介绍与铺垫、学习方法 reset.css 文档流 文档流、脱离文档流、内容溢出处理 盒模型 只</description>
    </item>
    
    <item>
      <title>【CSS非全解10】CSS 动画_animation</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A310css-%E5%8A%A8%E7%94%BB_animation/</link>
      <pubDate>Thu, 06 Feb 2020 00:42:26 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A310css-%E5%8A%A8%E7%94%BB_animation/</guid>
      <description>@keyframes完整语法 标准写法 搜索 from{} to{} 百分数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @keyframes sidein{ from{ transform:translateX(0%); } to{ transform:translateX(100%); } } @keyframes identifier{ 0%{ top:0;left:0; } 30%{ top:50px; } 60%,72%{ left:50px; } 100%{ top:100px;left:100%;</description>
    </item>
    
    <item>
      <title>【CSS非全解09】CSS 动画_transform全解和transition过渡</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A309css-%E5%8A%A8%E7%94%BB_transform%E5%85%A8%E8%A7%A3%E5%92%8Ctransition%E8%BF%87%E6%B8%A1/</link>
      <pubDate>Tue, 04 Feb 2020 00:41:31 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A309css-%E5%8A%A8%E7%94%BB_transform%E5%85%A8%E8%A7%A3%E5%92%8Ctransition%E8%BF%87%E6%B8%A1/</guid>
      <description>transform MDN transform 四个常用功能 位移translate 缩放scale 旋转rotate 倾斜skew transform经验 一般都需配合transition过渡</description>
    </item>
    
    <item>
      <title>【CSS非全解08】CSS 动画_动画及浏览器渲染原理</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A308css-%E5%8A%A8%E7%94%BB_%E5%8A%A8%E7%94%BB%E5%8F%8A%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sun, 02 Feb 2020 00:41:05 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A308css-%E5%8A%A8%E7%94%BB_%E5%8A%A8%E7%94%BB%E5%8F%8A%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</guid>
      <description>一个最简单的例子 将&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;从左往右移动： 用 JS 实现 原理 每过一段时间，将 div 移动一小段距离 用setInter</description>
    </item>
    
    <item>
      <title>【CSS非全解07】CSS定位</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A307css%E5%AE%9A%E4%BD%8D/</link>
      <pubDate>Sat, 01 Feb 2020 00:40:41 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A307css%E5%AE%9A%E4%BD%8D/</guid>
      <description>布局和定位的区别 布局是屏幕平面上的 定位是垂直于屏幕的 完全不同的概念 一个 div 的分层 从文档流和盒模型说起 背景的范围是从哪到哪？ border内侧围住</description>
    </item>
    
    <item>
      <title>【HTTP非全解】请求和响应 &amp; Node.Js Server</title>
      <link>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94-node.js-server/</link>
      <pubDate>Sat, 25 Jan 2020 00:52:10 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94-node.js-server/</guid>
      <description>记得用完服务器机器要关机（并选择停止计费） 记得用完服务器机器要关机（并选择停止计费） 记得用完服务器机器要关机（并选择停止计费） 记得用完服务器</description>
    </item>
    
    <item>
      <title>【CSS非全解06】CSS布局_Grid布局</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A306css%E5%B8%83%E5%B1%80_grid%E5%B8%83%E5%B1%80/</link>
      <pubDate>Sat, 18 Jan 2020 03:08:43 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A306css%E5%B8%83%E5%B1%80_grid%E5%B8%83%E5%B1%80/</guid>
      <description>grid布局 功能最强大的布局方案 进一步降低CSS门槛 一维布局用flex 二维用grid布局 CSS tricks: A Complete Guide to rid Grid布局也分container和i</description>
    </item>
    
    <item>
      <title>【CSS非全解05】CSS布局_Flex布局</title>
      <link>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A305css%E5%B8%83%E5%B1%80_flex%E5%B8%83%E5%B1%80/</link>
      <pubDate>Fri, 17 Jan 2020 03:07:53 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/css/css%E9%9D%9E%E5%85%A8%E8%A7%A305css%E5%B8%83%E5%B1%80_flex%E5%B8%83%E5%B1%80/</guid>
      <description>flex布局 教程（来自CSS Tricks） 忘掉 用flex重写float布局 flex布局对性能的影响 FFC 容器container，子项item 一个</description>
    </item>
    
    <item>
      <title>【HTTP非全解】浅析 URL</title>
      <link>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E6%B5%85%E6%9E%90-url/</link>
      <pubDate>Thu, 16 Jan 2020 06:42:43 +0800</pubDate>
      
      <guid>http://xmasuhai.xyz/post/http/http%E9%9D%9E%E5%85%A8%E8%A7%A3%E6%B5%85%E6%9E%90-url/</guid>
      <description>内容提要： URL 包含哪几部分，每部分分别有什么作用 DNS 的作用是什么，nslookup 命令怎么用 IP 的作用是什么，ping 命令怎么用 域名是什么，分别哪</description>
    </item>
    
  </channel>
</rss>